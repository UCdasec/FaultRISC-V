	.file	"uECC.c"
	.option nopic
	.attribute arch, "rv64i2p1_m2p0_a2p1_f2p2_d2p2_c2p0_zicsr2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
	.align	1
	.type	uECC_vli_clear, @function
uECC_vli_clear:
	ble	a1,zero,.L1
	mv	a5,a0
	slli	a1,a1,2
	add	a0,a0,a1
.L3:
	sw	zero,0(a5)
	addi	a5,a5,4
	bne	a5,a0,.L3
.L1:
	ret
	.size	uECC_vli_clear, .-uECC_vli_clear
	.align	1
	.type	uECC_vli_isZero, @function
uECC_vli_isZero:
	ble	a1,zero,.L8
	mv	a5,a0
	slli	a1,a1,2
	add	a3,a0,a1
	li	a0,0
.L7:
	lw	a4,0(a5)
	or	a0,a4,a0
	addi	a5,a5,4
	bne	a5,a3,.L7
.L6:
	seqz	a0,a0
	ret
.L8:
	li	a0,0
	j	.L6
	.size	uECC_vli_isZero, .-uECC_vli_isZero
	.align	1
	.type	uECC_vli_testBit, @function
uECC_vli_testBit:
	srai	a5,a1,5
	slli	a5,a5,2
	add	a0,a0,a5
	li	a5,1
	sllw	a5,a5,a1
	lw	a0,0(a0)
	and	a0,a0,a5
	sext.w	a0,a0
	ret
	.size	uECC_vli_testBit, .-uECC_vli_testBit
	.align	1
	.type	uECC_vli_numBits, @function
uECC_vli_numBits:
	addiw	a5,a1,-1
	slliw	a5,a5,24
	sraiw	a5,a5,24
	blt	a5,zero,.L12
	slli	a4,a5,2
	add	a4,a0,a4
.L13:
	lw	a3,0(a4)
	bne	a3,zero,.L26
	addiw	a5,a5,-1
	slliw	a5,a5,24
	sraiw	a5,a5,24
	addi	a4,a4,-4
	bge	a5,zero,.L13
	li	a0,0
	ret
.L12:
	bne	a1,zero,.L19
	li	a0,0
	ret
.L22:
	mv	a4,a5
	j	.L17
.L26:
	addiw	a5,a5,1
	slliw	a1,a5,24
	sraiw	a1,a1,24
.L19:
	slli	a5,a1,2
	add	a0,a0,a5
	lw	a5,-4(a0)
	beq	a5,zero,.L22
	li	a4,0
.L18:
	srliw	a5,a5,1
	addiw	a4,a4,1
	bne	a5,zero,.L18
.L17:
	addiw	a0,a1,-1
	slliw	a0,a0,5
	addw	a0,a0,a4
	slliw	a0,a0,16
	sraiw	a0,a0,16
	ret
	.size	uECC_vli_numBits, .-uECC_vli_numBits
	.align	1
	.type	uECC_vli_set, @function
uECC_vli_set:
	ble	a2,zero,.L27
	mv	a5,a1
	slli	a2,a2,2
	add	a1,a1,a2
.L29:
	lw	a4,0(a5)
	sw	a4,0(a0)
	addi	a5,a5,4
	addi	a0,a0,4
	bne	a5,a1,.L29
.L27:
	ret
	.size	uECC_vli_set, .-uECC_vli_set
	.align	1
	.type	uECC_vli_cmp_unsafe, @function
uECC_vli_cmp_unsafe:
	addiw	a2,a2,-1
	slliw	a2,a2,24
	sraiw	a2,a2,24
	blt	a2,zero,.L34
	slli	a5,a2,2
	add	a0,a0,a5
	add	a1,a1,a5
.L33:
	lw	a4,0(a0)
	lw	a5,0(a1)
	bgtu	a4,a5,.L35
	bltu	a4,a5,.L36
	addiw	a2,a2,-1
	slliw	a2,a2,24
	sraiw	a2,a2,24
	addi	a0,a0,-4
	addi	a1,a1,-4
	bge	a2,zero,.L33
	li	a0,0
	ret
.L34:
	li	a0,0
	ret
.L35:
	li	a0,1
	ret
.L36:
	li	a0,-1
	ret
	.size	uECC_vli_cmp_unsafe, .-uECC_vli_cmp_unsafe
	.align	1
	.type	uECC_vli_rshift1, @function
uECC_vli_rshift1:
	slli	a1,a1,2
	add	a1,a0,a1
	bgeu	a0,a1,.L38
	li	a5,0
.L40:
	lw	a4,-4(a1)
	srliw	a3,a4,1
	or	a5,a5,a3
	sw	a5,-4(a1)
	slliw	a5,a4,31
	addi	a1,a1,-4
	bltu	a0,a1,.L40
.L38:
	ret
	.size	uECC_vli_rshift1, .-uECC_vli_rshift1
	.align	1
	.type	uECC_vli_add, @function
uECC_vli_add:
	mv	t1,a0
	ble	a3,zero,.L46
	slli	a3,a3,2
	li	a4,0
	li	a0,0
	j	.L45
.L44:
	add	a6,t1,a4
	sw	a5,0(a6)
	addi	a4,a4,4
	beq	a4,a3,.L48
.L45:
	add	a5,a1,a4
	lw	a6,0(a5)
	add	a5,a2,a4
	lw	a5,0(a5)
	addw	a5,a5,a6
	addw	a5,a5,a0
	sext.w	a7,a5
	beq	a6,a7,.L44
	sgtu	a0,a6,a7
	j	.L44
.L48:
	ret
.L46:
	li	a0,0
	ret
	.size	uECC_vli_add, .-uECC_vli_add
	.align	1
	.type	uECC_vli_sub, @function
uECC_vli_sub:
	mv	t1,a0
	ble	a3,zero,.L53
	slli	a3,a3,2
	li	a5,0
	li	a0,0
	j	.L52
.L51:
	add	a6,t1,a5
	sw	a4,0(a6)
	addi	a5,a5,4
	beq	a5,a3,.L55
.L52:
	add	a4,a1,a5
	lw	a6,0(a4)
	subw	a4,a6,a0
	add	a7,a2,a5
	lw	a7,0(a7)
	subw	a4,a4,a7
	sext.w	a7,a4
	beq	a6,a7,.L51
	sltu	a0,a6,a7
	j	.L51
.L55:
	ret
.L53:
	li	a0,0
	ret
	.size	uECC_vli_sub, .-uECC_vli_sub
	.align	1
	.type	uECC_vli_cmp, @function
uECC_vli_cmp:
	addi	sp,sp,-64
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	mv	s1,a2
	mv	a3,a2
	mv	a2,a1
	mv	a1,a0
	mv	a0,sp
	call	uECC_vli_sub
	sext.w	s0,a0
	mv	a1,s1
	mv	a0,sp
	call	uECC_vli_isZero
	sext.w	a0,a0
	seqz	a0,a0
	snez	s0,s0
	slliw	s0,s0,1
	subw	a0,a0,s0
	slliw	a0,a0,24
	sraiw	a0,a0,24
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	addi	sp,sp,64
	jr	ra
	.size	uECC_vli_cmp, .-uECC_vli_cmp
	.align	1
	.type	uECC_vli_modAdd, @function
uECC_vli_modAdd:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	mv	s2,a3
	mv	s0,a4
	mv	a3,a4
	call	uECC_vli_add
	sext.w	a0,a0
	bne	a0,zero,.L59
	mv	a2,s0
	mv	a1,s1
	mv	a0,s2
	call	uECC_vli_cmp_unsafe
	li	a5,1
	beq	a0,a5,.L58
.L59:
	mv	a3,s0
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
.L58:
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	ra
	.size	uECC_vli_modAdd, .-uECC_vli_modAdd
	.align	1
	.type	uECC_vli_modSub, @function
uECC_vli_modSub:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	mv	s2,a3
	mv	s0,a4
	mv	a3,a4
	call	uECC_vli_sub
	sext.w	a5,a0
	bne	a5,zero,.L65
.L62:
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	ra
.L65:
	mv	a3,s0
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	j	.L62
	.size	uECC_vli_modSub, .-uECC_vli_modSub
	.align	1
	.type	vli_modInv_update, @function
vli_modInv_update:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	mv	s1,a2
	lw	a5,0(a0)
	andi	a5,a5,1
	bne	a5,zero,.L71
	mv	a1,a2
	call	uECC_vli_rshift1
	j	.L66
.L71:
	sd	s2,0(sp)
	mv	a3,a2
	mv	a2,a1
	mv	a1,a0
	call	uECC_vli_add
	sext.w	s2,a0
	mv	a1,s1
	mv	a0,s0
	call	uECC_vli_rshift1
	beq	s2,zero,.L70
	slli	s1,s1,2
	addi	s1,s1,-4
	add	s0,s0,s1
	lw	a5,0(s0)
	li	a4,-2147483648
	or	a5,a5,a4
	sw	a5,0(s0)
	ld	s2,0(sp)
.L66:
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	jr	ra
.L70:
	ld	s2,0(sp)
	j	.L66
	.size	vli_modInv_update, .-vli_modInv_update
	.align	1
	.type	uECC_vli_modInv, @function
uECC_vli_modInv:
	addi	sp,sp,-176
	sd	ra,168(sp)
	sd	s0,160(sp)
	sd	s1,152(sp)
	sd	s2,144(sp)
	sd	s3,136(sp)
	mv	s3,a0
	mv	s2,a1
	mv	s1,a2
	mv	s0,a3
	mv	a1,a3
	mv	a0,s2
	call	uECC_vli_isZero
	sext.w	a0,a0
	bne	a0,zero,.L84
	mv	a2,s0
	mv	a1,s2
	addi	a0,sp,96
	call	uECC_vli_set
	mv	a2,s0
	mv	a1,s1
	addi	a0,sp,64
	call	uECC_vli_set
	mv	a1,s0
	addi	a0,sp,32
	call	uECC_vli_clear
	li	a5,1
	sw	a5,32(sp)
	mv	a1,s0
	mv	a0,sp
	call	uECC_vli_clear
	j	.L75
.L84:
	mv	a1,s0
	mv	a0,s3
	call	uECC_vli_clear
	j	.L72
.L86:
	mv	a1,s0
	addi	a0,sp,96
	call	uECC_vli_rshift1
	mv	a2,s0
	mv	a1,s1
	addi	a0,sp,32
	call	vli_modInv_update
.L75:
	mv	a2,s0
	addi	a1,sp,64
	addi	a0,sp,96
	call	uECC_vli_cmp_unsafe
	beq	a0,zero,.L85
	lw	a5,96(sp)
	andi	a5,a5,1
	beq	a5,zero,.L86
	lw	a5,64(sp)
	andi	a5,a5,1
	beq	a5,zero,.L87
	ble	a0,zero,.L79
	mv	a3,s0
	addi	a2,sp,64
	addi	a1,sp,96
	mv	a0,a1
	call	uECC_vli_sub
	mv	a1,s0
	addi	a0,sp,96
	call	uECC_vli_rshift1
	mv	a2,s0
	mv	a1,sp
	addi	a0,sp,32
	call	uECC_vli_cmp_unsafe
	blt	a0,zero,.L88
.L80:
	mv	a3,s0
	mv	a2,sp
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_sub
	mv	a2,s0
	mv	a1,s1
	addi	a0,sp,32
	call	vli_modInv_update
	j	.L75
.L87:
	mv	a1,s0
	addi	a0,sp,64
	call	uECC_vli_rshift1
	mv	a2,s0
	mv	a1,s1
	mv	a0,sp
	call	vli_modInv_update
	j	.L75
.L88:
	mv	a3,s0
	mv	a2,s1
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_add
	j	.L80
.L79:
	mv	a3,s0
	addi	a2,sp,96
	addi	a1,sp,64
	mv	a0,a1
	call	uECC_vli_sub
	mv	a1,s0
	addi	a0,sp,64
	call	uECC_vli_rshift1
	mv	a2,s0
	addi	a1,sp,32
	mv	a0,sp
	call	uECC_vli_cmp_unsafe
	blt	a0,zero,.L89
.L81:
	mv	a3,s0
	addi	a2,sp,32
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_sub
	mv	a2,s0
	mv	a1,s1
	mv	a0,sp
	call	vli_modInv_update
	j	.L75
.L89:
	mv	a3,s0
	mv	a2,s1
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_add
	j	.L81
.L85:
	mv	a2,s0
	addi	a1,sp,32
	mv	a0,s3
	call	uECC_vli_set
.L72:
	ld	ra,168(sp)
	ld	s0,160(sp)
	ld	s1,152(sp)
	ld	s2,144(sp)
	ld	s3,136(sp)
	addi	sp,sp,176
	jr	ra
	.size	uECC_vli_modInv, .-uECC_vli_modInv
	.align	1
	.type	omega_mult_secp160r1, @function
omega_mult_secp160r1:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	mv	s1,a1
	addi	s2,a0,4
	li	a2,5
	mv	a0,s2
	call	uECC_vli_set
	li	a1,5
	mv	a0,s2
	call	uECC_vli_rshift1
	lw	a5,0(s1)
	slliw	a5,a5,31
	sw	a5,0(s0)
	li	a3,5
	mv	a2,s1
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_add
	sext.w	a4,a0
	beq	a4,zero,.L90
	li	a2,5
.L92:
	slli	a5,a2,32
	srli	a3,a5,30
	add	a3,s0,a3
	lw	a5,0(a3)
	addw	a6,a5,a4
	sw	a6,0(a3)
	slli	a5,a5,32
	srli	a5,a5,32
	slli	a4,a4,32
	srli	a4,a4,32
	add	a5,a5,a4
	srli	a4,a5,32
	addiw	a2,a2,1
	bne	a4,zero,.L92
.L90:
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	ra
	.size	omega_mult_secp160r1, .-omega_mult_secp160r1
	.align	1
	.type	vli_mmod_fast_secp160r1, @function
vli_mmod_fast_secp160r1:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	mv	s1,a0
	mv	s2,a1
	li	a1,5
	addi	a0,sp,8
	call	uECC_vli_clear
	li	a1,5
	addi	a0,sp,28
	call	uECC_vli_clear
	addi	a1,s2,20
	addi	a0,sp,8
	call	omega_mult_secp160r1
	li	a3,5
	addi	a2,sp,8
	mv	a1,s2
	mv	a0,s1
	call	uECC_vli_add
	sext.w	s0,a0
	li	a1,5
	mv	a0,s2
	call	uECC_vli_clear
	addi	a1,sp,28
	mv	a0,s2
	call	omega_mult_secp160r1
	li	a3,5
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	beq	s0,zero,.L96
	lui	s2,%hi(.LANCHOR0+4)
	addi	s2,s2,%lo(.LANCHOR0+4)
.L97:
	addiw	s0,s0,-1
	li	a3,5
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	bne	s0,zero,.L97
.L96:
	li	a2,5
	lui	a1,%hi(.LANCHOR0+4)
	addi	a1,a1,%lo(.LANCHOR0+4)
	mv	a0,s1
	call	uECC_vli_cmp_unsafe
	bgt	a0,zero,.L101
.L95:
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	jr	ra
.L101:
	li	a3,5
	lui	a2,%hi(.LANCHOR0+4)
	addi	a2,a2,%lo(.LANCHOR0+4)
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	j	.L95
	.size	vli_mmod_fast_secp160r1, .-vli_mmod_fast_secp160r1
	.align	1
	.type	vli_mmod_fast_secp192r1, @function
vli_mmod_fast_secp192r1:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	mv	s1,a0
	mv	s2,a1
	li	a2,6
	call	uECC_vli_set
	li	a2,6
	addi	a1,s2,24
	addi	a0,sp,8
	call	uECC_vli_set
	li	a3,6
	addi	a2,sp,8
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	sext.w	s0,a0
	sw	zero,12(sp)
	sw	zero,8(sp)
	lw	a5,24(s2)
	sw	a5,16(sp)
	lw	a5,28(s2)
	sw	a5,20(sp)
	lw	a5,32(s2)
	sw	a5,24(sp)
	lw	a5,36(s2)
	sw	a5,28(sp)
	li	a3,6
	addi	a2,sp,8
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	lw	a5,40(s2)
	sw	a5,16(sp)
	sw	a5,8(sp)
	lw	a5,44(s2)
	sw	a5,20(sp)
	sw	a5,12(sp)
	sw	zero,28(sp)
	sw	zero,24(sp)
	li	a3,6
	addi	a2,sp,8
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	lui	s2,%hi(.LANCHOR0+204)
	addi	s2,s2,%lo(.LANCHOR0+204)
	li	s3,1
	j	.L103
.L104:
	li	a3,6
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
.L103:
	bne	s0,zero,.L104
	li	a2,6
	mv	a1,s1
	mv	a0,s2
	call	uECC_vli_cmp_unsafe
	bne	a0,s3,.L104
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	addi	sp,sp,80
	jr	ra
	.size	vli_mmod_fast_secp192r1, .-vli_mmod_fast_secp192r1
	.align	1
	.type	vli_mmod_fast_secp224r1, @function
vli_mmod_fast_secp224r1:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	mv	s1,a0
	mv	s2,a1
	li	a2,7
	call	uECC_vli_set
	sw	zero,8(sp)
	sw	zero,4(sp)
	sw	zero,0(sp)
	lw	a5,28(s2)
	sw	a5,12(sp)
	lw	a5,32(s2)
	sw	a5,16(sp)
	lw	a5,36(s2)
	sw	a5,20(sp)
	lw	a5,40(s2)
	sw	a5,24(sp)
	li	a3,7
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	sext.w	s0,a0
	lw	a5,44(s2)
	sw	a5,12(sp)
	lw	a5,48(s2)
	sw	a5,16(sp)
	lw	a5,52(s2)
	sw	a5,20(sp)
	sw	zero,24(sp)
	li	a3,7
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	lw	a5,28(s2)
	sw	a5,0(sp)
	lw	a5,32(s2)
	sw	a5,4(sp)
	lw	a5,36(s2)
	sw	a5,8(sp)
	lw	a5,40(s2)
	sw	a5,12(sp)
	lw	a5,44(s2)
	sw	a5,16(sp)
	lw	a5,48(s2)
	sw	a5,20(sp)
	lw	a5,52(s2)
	sw	a5,24(sp)
	li	a3,7
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
	lw	a5,44(s2)
	sw	a5,0(sp)
	lw	a5,48(s2)
	sw	a5,4(sp)
	lw	a5,52(s2)
	sw	a5,8(sp)
	sw	zero,24(sp)
	sw	zero,20(sp)
	sw	zero,16(sp)
	sw	zero,12(sp)
	li	a3,7
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
	blt	s0,zero,.L113
	sd	s3,40(sp)
	lui	s2,%hi(.LANCHOR0+404)
	addi	s2,s2,%lo(.LANCHOR0+404)
	li	s3,1
	j	.L107
.L113:
	lui	s2,%hi(.LANCHOR0+404)
	addi	s2,s2,%lo(.LANCHOR0+404)
.L108:
	li	a3,7
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	blt	s0,zero,.L108
	j	.L106
.L110:
	li	a3,7
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
.L107:
	bne	s0,zero,.L110
	li	a2,7
	mv	a1,s1
	mv	a0,s2
	call	uECC_vli_cmp_unsafe
	bne	a0,s3,.L110
	ld	s3,40(sp)
.L106:
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	jr	ra
	.size	vli_mmod_fast_secp224r1, .-vli_mmod_fast_secp224r1
	.align	1
	.type	vli_mmod_fast_secp256r1, @function
vli_mmod_fast_secp256r1:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	mv	s1,a0
	mv	s2,a1
	li	a2,8
	call	uECC_vli_set
	sw	zero,8(sp)
	sw	zero,4(sp)
	sw	zero,0(sp)
	lw	a5,44(s2)
	sw	a5,12(sp)
	lw	a5,48(s2)
	sw	a5,16(sp)
	lw	a5,52(s2)
	sw	a5,20(sp)
	lw	a5,56(s2)
	sw	a5,24(sp)
	lw	a5,60(s2)
	sw	a5,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_add
	sext.w	s0,a0
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	lw	a5,48(s2)
	sw	a5,12(sp)
	lw	a5,52(s2)
	sw	a5,16(sp)
	lw	a5,56(s2)
	sw	a5,20(sp)
	lw	a5,60(s2)
	sw	a5,24(sp)
	sw	zero,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_add
	addw	s0,s0,a0
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	lw	a5,32(s2)
	sw	a5,0(sp)
	lw	a5,36(s2)
	sw	a5,4(sp)
	lw	a5,40(s2)
	sw	a5,8(sp)
	sw	zero,20(sp)
	sw	zero,16(sp)
	sw	zero,12(sp)
	lw	a5,56(s2)
	sw	a5,24(sp)
	lw	a5,60(s2)
	sw	a5,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	lw	a5,36(s2)
	sw	a5,0(sp)
	lw	a5,40(s2)
	sw	a5,4(sp)
	lw	a5,44(s2)
	sw	a5,8(sp)
	lw	a5,52(s2)
	sw	a5,12(sp)
	lw	a4,56(s2)
	sw	a4,16(sp)
	lw	a4,60(s2)
	sw	a4,20(sp)
	sw	a5,24(sp)
	lw	a5,32(s2)
	sw	a5,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	lw	a5,44(s2)
	sw	a5,0(sp)
	lw	a5,48(s2)
	sw	a5,4(sp)
	lw	a5,52(s2)
	sw	a5,8(sp)
	sw	zero,20(sp)
	sw	zero,16(sp)
	sw	zero,12(sp)
	lw	a5,32(s2)
	sw	a5,24(sp)
	lw	a5,40(s2)
	sw	a5,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
	lw	a5,48(s2)
	sw	a5,0(sp)
	lw	a5,52(s2)
	sw	a5,4(sp)
	lw	a5,56(s2)
	sw	a5,8(sp)
	lw	a5,60(s2)
	sw	a5,12(sp)
	lw	a5,36(s2)
	sw	a5,24(sp)
	lw	a5,44(s2)
	sw	a5,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
	lw	a5,52(s2)
	sw	a5,0(sp)
	lw	a5,56(s2)
	sw	a5,4(sp)
	lw	a5,60(s2)
	sw	a5,8(sp)
	lw	a5,32(s2)
	sw	a5,12(sp)
	lw	a5,36(s2)
	sw	a5,16(sp)
	lw	a5,40(s2)
	sw	a5,20(sp)
	sw	zero,24(sp)
	lw	a5,48(s2)
	sw	a5,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
	lw	a5,56(s2)
	sw	a5,0(sp)
	lw	a5,60(s2)
	sw	a5,4(sp)
	sw	zero,8(sp)
	lw	a5,36(s2)
	sw	a5,12(sp)
	lw	a5,40(s2)
	sw	a5,16(sp)
	lw	a5,44(s2)
	sw	a5,20(sp)
	lw	a5,52(s2)
	sw	a5,28(sp)
	li	a3,8
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
	blt	s0,zero,.L122
	sd	s3,40(sp)
	lui	s2,%hi(.LANCHOR0+604)
	addi	s2,s2,%lo(.LANCHOR0+604)
	li	s3,1
	j	.L116
.L122:
	lui	s2,%hi(.LANCHOR0+604)
	addi	s2,s2,%lo(.LANCHOR0+604)
.L117:
	li	a3,8
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	blt	s0,zero,.L117
	j	.L115
.L119:
	li	a3,8
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	subw	s0,s0,a0
.L116:
	bne	s0,zero,.L119
	li	a2,8
	mv	a1,s1
	mv	a0,s2
	call	uECC_vli_cmp_unsafe
	bne	a0,s3,.L119
	ld	s3,40(sp)
.L115:
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	jr	ra
	.size	vli_mmod_fast_secp256r1, .-vli_mmod_fast_secp256r1
	.align	1
	.type	omega_mult_secp256k1, @function
omega_mult_secp256k1:
	addi	sp,sp,-16
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	mv	a2,a1
	mv	a4,a1
	mv	a6,a0
	addi	t1,a1,32
	li	a5,0
	li	a7,977
.L125:
	lwu	a3,0(a4)
	mul	a3,a3,a7
	add	a5,a5,a3
	sw	a5,0(a6)
	srli	a5,a5,32
	addi	a4,a4,4
	addi	a6,a6,4
	bne	a4,t1,.L125
	sw	a5,32(s0)
	addi	a0,s0,4
	li	a3,8
	mv	a1,a0
	call	uECC_vli_add
	sw	a0,36(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	jr	ra
	.size	omega_mult_secp256k1, .-omega_mult_secp256k1
	.align	1
	.type	vli_mmod_fast_secp256k1, @function
vli_mmod_fast_secp256k1:
	addi	sp,sp,-96
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	mv	s1,a0
	mv	s2,a1
	li	a1,8
	mv	a0,sp
	call	uECC_vli_clear
	li	a1,8
	addi	a0,sp,32
	call	uECC_vli_clear
	addi	a1,s2,32
	mv	a0,sp
	call	omega_mult_secp256k1
	li	a3,8
	mv	a2,sp
	mv	a1,s2
	mv	a0,s1
	call	uECC_vli_add
	sext.w	s0,a0
	li	a1,8
	mv	a0,s2
	call	uECC_vli_clear
	addi	a1,sp,32
	mv	a0,s2
	call	omega_mult_secp256k1
	li	a3,8
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_add
	addw	s0,s0,a0
	beq	s0,zero,.L129
	lui	s2,%hi(.LANCHOR0+804)
	addi	s2,s2,%lo(.LANCHOR0+804)
.L130:
	addiw	s0,s0,-1
	li	a3,8
	mv	a2,s2
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	bne	s0,zero,.L130
.L129:
	li	a2,8
	lui	a1,%hi(.LANCHOR0+804)
	addi	a1,a1,%lo(.LANCHOR0+804)
	mv	a0,s1
	call	uECC_vli_cmp_unsafe
	bgt	a0,zero,.L134
.L128:
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	addi	sp,sp,96
	jr	ra
.L134:
	li	a3,8
	lui	a2,%hi(.LANCHOR0+804)
	addi	a2,a2,%lo(.LANCHOR0+804)
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	j	.L128
	.size	vli_mmod_fast_secp256k1, .-vli_mmod_fast_secp256k1
	.align	1
	.type	regularize_k, @function
regularize_k:
	addi	sp,sp,-64
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s6,0(sp)
	mv	s2,a1
	mv	s3,a2
	lh	s4,2(a3)
	addiw	a5,s4,31
	sraiw	s0,a5,31
	srliw	s0,s0,27
	addw	s0,s0,a5
	sraiw	s0,s0,5
	slliw	s0,s0,24
	sraiw	s0,s0,24
	addi	s1,a3,36
	mv	a3,s0
	mv	a2,s1
	mv	a1,a0
	mv	a0,s2
	call	uECC_vli_add
	sext.w	a0,a0
	li	s6,1
	bne	a0,zero,.L136
	sd	s5,8(sp)
	slliw	a5,s0,5
	li	s6,0
	ble	a5,s4,.L140
	mv	a1,s4
	mv	a0,s2
	call	uECC_vli_testBit
	sext.w	s6,a0
	snez	s6,s6
	ld	s5,8(sp)
	j	.L136
.L140:
	ld	s5,8(sp)
.L136:
	mv	a3,s0
	mv	a2,s1
	mv	a1,s2
	mv	a0,s3
	call	uECC_vli_add
	mv	a0,s6
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	jr	ra
	.size	regularize_k, .-regularize_k
	.align	1
	.type	uECC_generate_random_int, @function
uECC_generate_random_int:
	lui	a5,%hi(g_rng_function)
	ld	a5,%lo(g_rng_function)(a5)
	beq	a5,zero,.L145
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	sd	s8,0(sp)
	mv	s1,a0
	mv	s7,a1
	mv	s3,a2
	mv	a1,a2
	mv	a0,s7
	call	uECC_vli_numBits
	slliw	s6,s3,2
	slli	s2,s3,2
	addi	s2,s2,-4
	add	s2,s1,s2
	slliw	a5,s3,5
	subw	a5,a5,a0
	li	s4,-1
	srlw	s4,s4,a5
	li	s0,64
	lui	s5,%hi(g_rng_function)
	li	s8,1
	j	.L144
.L143:
	addiw	s0,s0,-1
	beq	s0,zero,.L152
.L144:
	ld	a5,%lo(g_rng_function)(s5)
	mv	a1,s6
	mv	a0,s1
	jalr	a5
	beq	a0,zero,.L142
	lw	a5,0(s2)
	and	a5,a5,s4
	sw	a5,0(s2)
	mv	a1,s3
	mv	a0,s1
	call	uECC_vli_isZero
	sext.w	a0,a0
	bne	a0,zero,.L143
	mv	a2,s3
	mv	a1,s1
	mv	a0,s7
	call	uECC_vli_cmp
	bne	a0,s8,.L143
	li	a0,1
.L142:
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	ld	s8,0(sp)
	addi	sp,sp,80
	jr	ra
.L152:
	li	a0,0
	j	.L142
.L145:
	li	a0,0
	ret
	.size	uECC_generate_random_int, .-uECC_generate_random_int
	.align	1
	.type	uECC_vli_nativeToBytes, @function
uECC_vli_nativeToBytes:
	ble	a1,zero,.L153
	addiw	a1,a1,-1
	li	a3,-1
.L155:
	srliw	a5,a1,2
	slli	a5,a5,2
	add	a5,a2,a5
	andi	a4,a1,3
	slliw	a4,a4,3
	lw	a5,0(a5)
	srlw	a5,a5,a4
	sb	a5,0(a0)
	addiw	a1,a1,-1
	addi	a0,a0,1
	bne	a1,a3,.L155
.L153:
	ret
	.size	uECC_vli_nativeToBytes, .-uECC_vli_nativeToBytes
	.align	1
	.type	uECC_vli_bytesToNative, @function
uECC_vli_bytesToNative:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	mv	s2,a1
	mv	s0,a2
	addiw	a5,a2,3
	sraiw	a1,a5,31
	srliw	a1,a1,30
	addw	a1,a1,a5
	sraiw	a1,a1,2
	slliw	a1,a1,24
	sraiw	a1,a1,24
	call	uECC_vli_clear
	ble	s0,zero,.L157
	addiw	a2,s0,-1
	mv	a1,s2
	li	a0,-1
.L159:
	srliw	a5,a2,2
	slli	a5,a5,2
	add	a5,s1,a5
	lbu	a3,0(a1)
	andi	a4,a2,3
	slliw	a4,a4,3
	sllw	a3,a3,a4
	lw	a4,0(a5)
	or	a4,a4,a3
	sw	a4,0(a5)
	addiw	a2,a2,-1
	addi	a1,a1,1
	bne	a2,a0,.L159
.L157:
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	ra
	.size	uECC_vli_bytesToNative, .-uECC_vli_bytesToNative
	.align	1
	.type	bits2int, @function
bits2int:
	addi	sp,sp,-64
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	mv	s1,a0
	mv	s5,a1
	mv	s3,a3
	lh	a4,2(a3)
	addiw	a5,a4,31
	sraiw	s0,a5,31
	srliw	s0,s0,27
	addw	s0,s0,a5
	sraiw	s0,s0,5
	sext.w	s4,s0
	addiw	a4,a4,7
	sraiw	a5,a4,31
	srliw	a5,a5,29
	addw	a5,a5,a4
	sraiw	a5,a5,3
	mv	s2,a5
	sext.w	a5,a5
	bleu	a5,a2,.L163
	mv	s2,a2
.L163:
	slliw	s4,s4,24
	sraiw	s4,s4,24
	mv	a1,s4
	mv	a0,s1
	call	uECC_vli_clear
	sext.w	a2,s2
	mv	a1,s5
	mv	a0,s1
	call	uECC_vli_bytesToNative
	slliw	s2,s2,3
	sext.w	a3,s2
	lh	a5,2(s3)
	sext.w	a4,a5
	bleu	a3,a4,.L162
	subw	a1,s2,a5
	slli	a4,s0,32
	srli	a5,a4,30
	add	a5,s1,a5
	bgeu	s1,a5,.L165
	li	a4,0
	li	a2,32
	subw	a2,a2,a1
.L166:
	lw	a6,-4(a5)
	srlw	a3,a6,a1
	or	a4,a4,a3
	sw	a4,-4(a5)
	sllw	a4,a6,a2
	addi	a5,a5,-4
	bltu	s1,a5,.L166
.L165:
	addi	s3,s3,36
	mv	a2,s4
	mv	a1,s1
	mv	a0,s3
	call	uECC_vli_cmp_unsafe
	li	a5,1
	bne	a0,a5,.L169
.L162:
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	addi	sp,sp,64
	jr	ra
.L169:
	mv	a3,s4
	mv	a2,s3
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_sub
	j	.L162
	.size	bits2int, .-bits2int
	.align	1
	.type	HMAC_init, @function
HMAC_init:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	lw	a5,28(a0)
	slliw	a4,a5,1
	slli	a4,a4,32
	srli	a4,a4,32
	ld	s1,32(a0)
	add	s1,s1,a4
	beq	a5,zero,.L171
	mv	a3,s1
	li	a5,0
.L172:
	lbu	a4,0(a1)
	xori	a4,a4,54
	sb	a4,0(a3)
	addiw	a5,a5,1
	addi	a1,a1,1
	addi	a3,a3,1
	lw	a4,28(s0)
	bgtu	a4,a5,.L172
.L171:
	lw	a4,24(s0)
	bleu	a4,a5,.L173
	slli	a3,a5,32
	srli	a3,a3,32
	add	a3,s1,a3
	mv	a4,a3
	li	a1,54
	subw	a5,a5,a3
.L174:
	sb	a1,0(a4)
	addi	a4,a4,1
	lw	a2,24(s0)
	addw	a3,a5,a4
	bgtu	a2,a3,.L174
.L173:
	ld	a5,0(s0)
	mv	a0,s0
	jalr	a5
	ld	a5,8(s0)
	lw	a2,24(s0)
	mv	a1,s1
	mv	a0,s0
	jalr	a5
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	jr	ra
	.size	HMAC_init, .-HMAC_init
	.align	1
	.type	HMAC_update, @function
HMAC_update:
	addi	sp,sp,-16
	sd	ra,8(sp)
	ld	a5,8(a0)
	jalr	a5
	ld	ra,8(sp)
	addi	sp,sp,16
	jr	ra
	.size	HMAC_update, .-HMAC_update
	.align	1
	.type	HMAC_finish, @function
HMAC_finish:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	mv	s1,a2
	lw	a5,28(a0)
	slliw	a4,a5,1
	slli	a4,a4,32
	srli	a4,a4,32
	ld	s2,32(a0)
	add	s2,s2,a4
	beq	a5,zero,.L181
	mv	a3,s2
	li	a5,0
.L182:
	lbu	a4,0(a1)
	xori	a4,a4,92
	sb	a4,0(a3)
	addiw	a5,a5,1
	addi	a1,a1,1
	addi	a3,a3,1
	lw	a4,28(s0)
	bgtu	a4,a5,.L182
.L181:
	lw	a4,24(s0)
	bleu	a4,a5,.L183
	slli	a3,a5,32
	srli	a3,a3,32
	add	a3,s2,a3
	mv	a4,a3
	li	a1,92
	subw	a5,a5,a3
.L184:
	sb	a1,0(a4)
	addi	a4,a4,1
	lw	a2,24(s0)
	addw	a3,a5,a4
	bgtu	a2,a3,.L184
.L183:
	ld	a5,16(s0)
	mv	a1,s1
	mv	a0,s0
	jalr	a5
	ld	a5,0(s0)
	mv	a0,s0
	jalr	a5
	ld	a5,8(s0)
	lw	a2,24(s0)
	mv	a1,s2
	mv	a0,s0
	jalr	a5
	ld	a5,8(s0)
	lw	a2,28(s0)
	mv	a1,s1
	mv	a0,s0
	jalr	a5
	ld	a5,16(s0)
	mv	a1,s1
	mv	a0,s0
	jalr	a5
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	ra
	.size	HMAC_finish, .-HMAC_finish
	.align	1
	.type	update_V, @function
update_V:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	mv	s2,a1
	mv	s1,a2
	call	HMAC_init
	lw	a2,28(s0)
	mv	a1,s1
	mv	a0,s0
	call	HMAC_update
	mv	a2,s1
	mv	a1,s2
	mv	a0,s0
	call	HMAC_finish
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	ra
	.size	update_V, .-update_V
	.align	1
	.type	uECC_vli_mult, @function
uECC_vli_mult:
	addi	sp,sp,-32
	sd	s2,8(sp)
	ble	a3,zero,.L200
	mv	t6,a0
	mv	t2,a3
	li	t4,0
	li	a7,0
	li	t3,0
	li	t0,0
	j	.L192
.L200:
	li	t1,0
	li	a7,0
	j	.L191
.L202:
	mv	t3,a7
	mv	a7,t1
	mv	t1,s0
	j	.L196
.L210:
	sw	t3,0(t6)
	addi	t4,t4,1
	addi	t6,t6,4
.L199:
	mv	t3,a7
	mv	a7,t1
.L192:
	slliw	t5,t4,24
	sraiw	t5,t5,24
	mv	t1,t0
	mv	a4,t0
	blt	t5,zero,.L210
.L193:
	subw	a5,t4,a4
	slli	a5,a5,2
	add	a5,a2,a5
	lwu	a6,0(a5)
	slli	a5,a4,2
	add	a5,a1,a5
	lwu	a5,0(a5)
	mul	a6,a6,a5
	slli	a5,a7,32
	slli	t3,t3,32
	srli	t3,t3,32
	or	a5,a5,t3
	add	a5,a6,a5
	sgtu	a6,a6,a5
	addw	t1,a6,t1
	srai	a7,a5,32
	sext.w	t3,a5
	addiw	a4,a4,1
	slliw	a4,a4,24
	sraiw	a4,a4,24
	ble	a4,t5,.L193
	sw	t3,0(t6)
	addi	t4,t4,1
	addi	t6,t6,4
	bne	t4,t2,.L199
.L191:
	mv	t4,a3
	slliw	t2,a3,1
	sext.w	s2,t2
	addiw	t2,t2,-1
	ble	t2,a3,.L195
	sd	s0,24(sp)
	sd	s1,16(sp)
	mv	t6,a3
	li	t0,1
	andi	s1,a3,0xff
	li	s0,0
.L198:
	slliw	a5,t0,24
	sraiw	a5,a5,24
	ble	a3,a5,.L202
	slli	a6,a5,2
	add	a6,a1,a6
	sub	t4,t4,a5
	slli	t4,t4,2
	add	t4,a2,t4
	subw	t5,s1,t0
	andi	t5,t5,0xff
	add	t5,t5,a5
	slli	t5,t5,2
	add	t5,a1,t5
	mv	t3,a7
	mv	a7,t1
	mv	t1,s0
.L197:
	lwu	a4,0(a6)
	lwu	a5,0(t4)
	mul	a4,a4,a5
	slli	a5,a7,32
	slli	t3,t3,32
	srli	t3,t3,32
	or	a5,a5,t3
	add	a5,a4,a5
	sgtu	a4,a4,a5
	addw	t1,a4,t1
	srai	a7,a5,32
	sext.w	t3,a5
	addi	a6,a6,4
	addi	t4,t4,-4
	bne	a6,t5,.L197
.L196:
	slli	a5,t6,2
	add	a5,a0,a5
	sw	t3,0(a5)
	addiw	t6,t6,1
	slliw	t6,t6,24
	sraiw	t6,t6,24
	mv	t4,t6
	addiw	t0,t0,1
	andi	t0,t0,0xff
	bgt	t2,t6,.L198
	ld	s0,24(sp)
	ld	s1,16(sp)
.L195:
	slli	s2,s2,2
	add	a0,a0,s2
	sw	a7,-4(a0)
	ld	s2,8(sp)
	addi	sp,sp,32
	jr	ra
	.size	uECC_vli_mult, .-uECC_vli_mult
	.align	1
	.type	uECC_vli_modMult, @function
uECC_vli_modMult:
	addi	sp,sp,-304
	sd	ra,296(sp)
	sd	s0,288(sp)
	sd	s1,280(sp)
	sd	s2,272(sp)
	sd	s3,264(sp)
	sd	s4,256(sp)
	sd	s10,208(sp)
	mv	s10,a0
	mv	s0,a3
	mv	s3,a4
	addi	s1,sp,144
	mv	a3,a4
	mv	a0,s1
	call	uECC_vli_mult
	addi	a5,sp,80
	sd	a5,0(sp)
	sd	s1,8(sp)
	mv	a1,s3
	mv	a0,s0
	call	uECC_vli_numBits
	slliw	a5,s3,6
	subw	a5,a5,a0
	slliw	s1,a5,16
	sraiw	s1,s1,16
	sraiw	a4,s1,31
	srliw	a4,a4,27
	addw	a5,a4,s1
	sraiw	a0,a5,5
	slliw	s4,a0,24
	sraiw	s4,s4,24
	andi	s2,a5,31
	subw	s2,s2,a4
	slliw	s2,s2,24
	sraiw	s2,s2,24
	mv	a1,s4
	addi	a0,sp,16
	call	uECC_vli_clear
	ble	s2,zero,.L212
	sd	s5,248(sp)
	sd	s6,240(sp)
	sd	s7,232(sp)
	sd	s8,224(sp)
	sd	s9,216(sp)
	beq	s3,zero,.L221
	mv	a3,s0
	mv	a4,s4
	addw	a0,s4,s3
	li	a5,0
	li	a7,32
	subw	a7,a7,s2
.L214:
	lw	a1,0(a3)
	slli	a6,a4,32
	srli	a2,a6,30
	addi	a2,a2,208
	add	a2,a2,sp
	sllw	a6,a1,s2
	or	a5,a5,a6
	sw	a5,-192(a2)
	srlw	a5,a1,a7
	addi	a3,a3,4
	addiw	a4,a4,1
	bne	a4,a0,.L214
.L221:
	mv	s9,s3
	slliw	s0,s3,1
	slli	a5,s3,2
	addi	a4,sp,16
	add	s7,a4,a5
	li	s2,1
	li	s4,0
	addiw	s5,s3,-1
	slli	s5,s5,2
	addi	a5,s5,208
	add	s5,a5,sp
	slli	s6,s3,2
	addi	a5,s6,208
	add	s6,a5,sp
	li	s8,-1
	j	.L216
.L212:
	slli	a0,s4,2
	mv	a2,s3
	mv	a1,s0
	addi	a5,sp,16
	add	a0,a5,a0
	call	uECC_vli_set
	li	s2,1
	blt	s1,zero,.L215
	sd	s5,248(sp)
	sd	s6,240(sp)
	sd	s7,232(sp)
	sd	s8,224(sp)
	sd	s9,216(sp)
	j	.L221
.L227:
	sltu	a0,a2,a1
.L217:
	add	a3,a6,a3
	sw	a4,0(a3)
	addiw	a5,a5,1
	slliw	a5,a5,24
	sraiw	a5,a5,24
	mv	a4,a5
	bge	a5,s0,.L220
.L218:
	slli	a3,a5,2
	add	a2,a7,a3
	lw	a2,0(a2)
	slli	a4,a4,2
	addi	a4,a4,208
	add	a4,a4,sp
	lw	a4,-192(a4)
	addw	a4,a4,a0
	subw	a4,a2,a4
	sext.w	a1,a4
	bne	a2,a1,.L227
	j	.L217
.L220:
	sub	a0,s2,a0
	seqz	s2,a0
	mv	a1,s3
	addi	a0,sp,16
	call	uECC_vli_rshift1
	lw	a4,-192(s6)
	slliw	a4,a4,31
	lw	a5,-192(s5)
	or	a5,a5,a4
	sw	a5,-192(s5)
	mv	a1,s3
	mv	a0,s7
	call	uECC_vli_rshift1
	addiw	s1,s1,-1
	slliw	s1,s1,16
	sraiw	s1,s1,16
	beq	s1,s8,.L226
.L216:
	mv	a0,s4
	ble	s9,zero,.L220
	slli	a5,s2,3
	addi	a5,a5,208
	add	a5,a5,sp
	ld	a7,-208(a5)
	xori	a5,s2,1
	slli	a5,a5,3
	addi	a5,a5,208
	add	a5,a5,sp
	ld	a6,-208(a5)
	mv	a0,s4
	mv	a4,s4
	mv	a5,s4
	j	.L218
.L226:
	ld	s5,248(sp)
	ld	s6,240(sp)
	ld	s7,232(sp)
	ld	s8,224(sp)
	ld	s9,216(sp)
.L215:
	slli	a5,s2,3
	addi	a5,a5,208
	add	a5,a5,sp
	mv	a2,s3
	ld	a1,-208(a5)
	mv	a0,s10
	call	uECC_vli_set
	ld	ra,296(sp)
	ld	s0,288(sp)
	ld	s1,280(sp)
	ld	s2,272(sp)
	ld	s3,264(sp)
	ld	s4,256(sp)
	ld	s10,208(sp)
	addi	sp,sp,304
	jr	ra
	.size	uECC_vli_modMult, .-uECC_vli_modMult
	.align	1
	.type	uECC_vli_modMult_fast, @function
uECC_vli_modMult_fast:
	addi	sp,sp,-96
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	mv	s1,a0
	mv	s0,a3
	lb	a3,0(a3)
	mv	a0,sp
	call	uECC_vli_mult
	ld	a5,192(s0)
	mv	a1,sp
	mv	a0,s1
	jalr	a5
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	addi	sp,sp,96
	jr	ra
	.size	uECC_vli_modMult_fast, .-uECC_vli_modMult_fast
	.align	1
	.type	uECC_vli_modSquare_fast, @function
uECC_vli_modSquare_fast:
	addi	sp,sp,-16
	sd	ra,8(sp)
	mv	a3,a2
	mv	a2,a1
	call	uECC_vli_modMult_fast
	ld	ra,8(sp)
	addi	sp,sp,16
	jr	ra
	.size	uECC_vli_modSquare_fast, .-uECC_vli_modSquare_fast
	.align	1
	.type	double_jacobian_default, @function
double_jacobian_default:
	addi	sp,sp,-128
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	s4,80(sp)
	sd	s5,72(sp)
	mv	s4,a0
	mv	s5,a1
	mv	s0,a2
	mv	s2,a3
	lb	s1,0(a3)
	mv	a1,s1
	mv	a0,a2
	call	uECC_vli_isZero
	sext.w	a5,a0
	beq	a5,zero,.L237
.L232:
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	addi	sp,sp,128
	jr	ra
.L237:
	sd	s3,88(sp)
	mv	a2,s2
	mv	a1,s5
	addi	a0,sp,32
	call	uECC_vli_modSquare_fast
	mv	a3,s2
	addi	a2,sp,32
	mv	a1,s4
	mv	a0,sp
	call	uECC_vli_modMult_fast
	mv	a2,s2
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modSquare_fast
	mv	a3,s2
	mv	a2,s0
	mv	a1,s5
	mv	a0,s5
	call	uECC_vli_modMult_fast
	mv	a2,s2
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modSquare_fast
	addi	s3,s2,4
	mv	a4,s1
	mv	a3,s3
	mv	a2,s0
	mv	a1,s4
	mv	a0,s4
	call	uECC_vli_modAdd
	mv	a4,s1
	mv	a3,s3
	mv	a2,s0
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modAdd
	mv	a4,s1
	mv	a3,s3
	mv	a2,s0
	mv	a1,s4
	mv	a0,s0
	call	uECC_vli_modSub
	mv	a3,s2
	mv	a2,s0
	mv	a1,s4
	mv	a0,s4
	call	uECC_vli_modMult_fast
	mv	a4,s1
	mv	a3,s3
	mv	a2,s4
	mv	a1,s4
	mv	a0,s0
	call	uECC_vli_modAdd
	mv	a4,s1
	mv	a3,s3
	mv	a2,s0
	mv	a1,s4
	mv	a0,s4
	call	uECC_vli_modAdd
	li	a1,0
	mv	a0,s4
	call	uECC_vli_testBit
	sext.w	a0,a0
	beq	a0,zero,.L234
	sd	s6,64(sp)
	mv	a3,s1
	mv	a2,s3
	mv	a1,s4
	mv	a0,s4
	call	uECC_vli_add
	sext.w	s6,a0
	mv	a1,s1
	mv	a0,s4
	call	uECC_vli_rshift1
	slli	a5,s1,2
	addi	a5,a5,-4
	add	a5,s4,a5
	slliw	s6,s6,31
	lw	a4,0(a5)
	or	a4,a4,s6
	sw	a4,0(a5)
	ld	s6,64(sp)
.L235:
	mv	a2,s2
	mv	a1,s4
	mv	a0,s0
	call	uECC_vli_modSquare_fast
	mv	a4,s1
	mv	a3,s3
	mv	a2,sp
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modSub
	mv	a4,s1
	mv	a3,s3
	mv	a2,sp
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modSub
	mv	a4,s1
	mv	a3,s3
	mv	a2,s0
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modSub
	mv	a3,s2
	mv	a2,sp
	mv	a1,s4
	mv	a0,s4
	call	uECC_vli_modMult_fast
	mv	a4,s1
	mv	a3,s3
	addi	a2,sp,32
	mv	a1,s4
	mv	a0,a2
	call	uECC_vli_modSub
	mv	a2,s1
	mv	a1,s0
	mv	a0,s4
	call	uECC_vli_set
	mv	a2,s1
	mv	a1,s5
	mv	a0,s0
	call	uECC_vli_set
	mv	a2,s1
	addi	a1,sp,32
	mv	a0,s5
	call	uECC_vli_set
	ld	s3,88(sp)
	j	.L232
.L234:
	mv	a1,s1
	mv	a0,s4
	call	uECC_vli_rshift1
	j	.L235
	.size	double_jacobian_default, .-double_jacobian_default
	.align	1
	.type	x_side_default, @function
x_side_default:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	mv	s0,a0
	mv	s2,a1
	mv	s1,a2
	sw	zero,4(sp)
	sw	zero,8(sp)
	sw	zero,12(sp)
	sw	zero,16(sp)
	sw	zero,20(sp)
	sw	zero,24(sp)
	sw	zero,28(sp)
	li	a5,3
	sw	a5,0(sp)
	lb	s4,0(a2)
	call	uECC_vli_modSquare_fast
	addi	s3,s1,4
	mv	a4,s4
	mv	a3,s3
	mv	a2,sp
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modSub
	mv	a3,s1
	mv	a2,s2
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modMult_fast
	mv	a4,s4
	mv	a3,s3
	addi	a2,s1,132
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modAdd
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	addi	sp,sp,80
	jr	ra
	.size	x_side_default, .-x_side_default
	.align	1
	.type	mod_sqrt_default, @function
mod_sqrt_default:
	addi	sp,sp,-112
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	mv	s3,a0
	mv	s1,a1
	sw	zero,36(sp)
	sw	zero,40(sp)
	sw	zero,44(sp)
	sw	zero,48(sp)
	sw	zero,52(sp)
	sw	zero,56(sp)
	sw	zero,60(sp)
	li	s2,1
	sw	s2,32(sp)
	sw	zero,4(sp)
	sw	zero,8(sp)
	sw	zero,12(sp)
	sw	zero,16(sp)
	sw	zero,20(sp)
	sw	zero,24(sp)
	sw	zero,28(sp)
	sw	s2,0(sp)
	lb	s4,0(a1)
	mv	a3,s4
	addi	a2,sp,32
	addi	a1,a1,4
	mv	a0,a2
	call	uECC_vli_add
	mv	a1,s4
	addi	a0,sp,32
	call	uECC_vli_numBits
	addiw	s0,a0,-1
	slliw	s0,s0,16
	sraiw	s0,s0,16
	bgt	s0,s2,.L243
.L241:
	mv	a2,s4
	mv	a1,sp
	mv	a0,s3
	call	uECC_vli_set
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	addi	sp,sp,112
	jr	ra
.L242:
	addiw	s0,s0,-1
	slliw	s0,s0,16
	sraiw	s0,s0,16
	beq	s0,s2,.L241
.L243:
	mv	a2,s1
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a1,s0
	addi	a0,sp,32
	call	uECC_vli_testBit
	sext.w	a0,a0
	beq	a0,zero,.L242
	mv	a3,s1
	mv	a2,s3
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modMult_fast
	j	.L242
	.size	mod_sqrt_default, .-mod_sqrt_default
	.align	1
	.type	mod_sqrt_secp224r1_rs, @function
mod_sqrt_secp224r1_rs:
	addi	sp,sp,-112
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	mv	s6,a0
	mv	s2,a1
	mv	s0,a2
	mv	s4,a3
	mv	s7,a4
	mv	s3,a5
	lui	s1,%hi(.LANCHOR0)
	addi	s1,s1,%lo(.LANCHOR0)
	addi	s5,s1,400
	mv	a2,s5
	mv	a1,a3
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a3,s5
	mv	a2,s7
	mv	a1,s4
	mv	a0,s2
	call	uECC_vli_modMult_fast
	addi	s1,s1,404
	li	a4,7
	mv	a3,s1
	mv	a2,s3
	mv	a1,sp
	mv	a0,s6
	call	uECC_vli_modAdd
	li	a4,7
	mv	a3,s1
	mv	a2,s2
	mv	a1,s2
	mv	a0,s2
	call	uECC_vli_modAdd
	mv	a3,s5
	mv	a2,s3
	mv	a1,sp
	mv	a0,s0
	call	uECC_vli_modMult_fast
	li	a4,7
	mv	a3,s1
	mv	a2,s0
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modAdd
	li	a4,7
	mv	a3,s1
	mv	a2,s0
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modAdd
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	addi	sp,sp,112
	jr	ra
	.size	mod_sqrt_secp224r1_rs, .-mod_sqrt_secp224r1_rs
	.align	1
	.type	mod_sqrt_secp224r1, @function
mod_sqrt_secp224r1:
	addi	sp,sp,-416
	sd	ra,408(sp)
	sd	s0,400(sp)
	sd	s1,392(sp)
	sd	s2,384(sp)
	sd	s3,376(sp)
	sd	s4,368(sp)
	sd	s5,360(sp)
	sd	s6,352(sp)
	mv	s4,a0
	sw	zero,36(sp)
	sw	zero,40(sp)
	sw	zero,44(sp)
	sw	zero,48(sp)
	sw	zero,52(sp)
	sw	zero,56(sp)
	li	a5,1
	sw	a5,32(sp)
	li	a2,7
	mv	a1,a0
	mv	a0,sp
	call	uECC_vli_set
	lui	a1,%hi(.LANCHOR0+404)
	addi	a1,a1,%lo(.LANCHOR0+404)
	li	a4,7
	mv	a3,a1
	mv	a2,s4
	addi	a0,sp,64
	call	uECC_vli_modSub
	li	s6,7
	li	s3,1
	lui	s5,%hi(.LANCHOR0)
	addi	s5,s5,%lo(.LANCHOR0)
	addi	s2,s5,400
.L251:
	li	a2,7
	mv	a1,sp
	addi	a0,sp,256
	call	uECC_vli_set
	li	a2,7
	addi	a1,sp,32
	addi	a0,sp,224
	call	uECC_vli_set
	li	a2,7
	addi	a1,sp,64
	addi	a0,sp,192
	call	uECC_vli_set
	ble	s3,zero,.L249
	addiw	s1,s3,1
	slliw	s1,s1,16
	sraiw	s1,s1,16
	li	s0,1
.L250:
	addi	a5,sp,192
	addi	a4,sp,224
	addi	a3,sp,256
	mv	a2,a5
	mv	a1,a4
	mv	a0,a3
	call	mod_sqrt_secp224r1_rs
	addiw	s0,s0,1
	slliw	s0,s0,16
	sraiw	s0,s0,16
	bne	s0,s1,.L250
.L249:
	mv	a3,s2
	addi	a2,sp,32
	addi	a1,sp,224
	addi	a0,sp,96
	call	uECC_vli_modMult_fast
	mv	a3,s2
	mv	a2,s4
	addi	a1,sp,96
	mv	a0,a1
	call	uECC_vli_modMult_fast
	addi	s0,s5,404
	li	a4,7
	mv	a3,s0
	addi	a2,sp,96
	mv	a1,s0
	mv	a0,a2
	call	uECC_vli_modSub
	mv	a3,s2
	mv	a2,sp
	addi	a1,sp,256
	addi	a0,sp,128
	call	uECC_vli_modMult_fast
	li	a4,7
	mv	a3,s0
	addi	a2,sp,96
	addi	a1,sp,128
	mv	a0,a1
	call	uECC_vli_modAdd
	mv	a3,s2
	addi	a2,sp,32
	addi	a1,sp,256
	addi	a0,sp,96
	call	uECC_vli_modMult_fast
	mv	a3,s2
	addi	a2,sp,224
	mv	a1,sp
	mv	a0,a2
	call	uECC_vli_modMult_fast
	li	a4,7
	mv	a3,s0
	addi	a2,sp,96
	addi	a1,sp,224
	mv	a0,a1
	call	uECC_vli_modAdd
	mv	a2,s2
	addi	a1,sp,224
	addi	a0,sp,192
	call	uECC_vli_modSquare_fast
	mv	a3,s2
	mv	a2,s4
	addi	a1,sp,192
	mv	a0,a1
	call	uECC_vli_modMult_fast
	li	a4,7
	mv	a3,s0
	addi	a2,sp,192
	mv	a1,s0
	mv	a0,a2
	call	uECC_vli_modSub
	li	a2,7
	addi	a1,sp,128
	addi	a0,sp,256
	call	uECC_vli_set
	li	a2,7
	addi	a1,sp,256
	mv	a0,sp
	call	uECC_vli_set
	li	a2,7
	addi	a1,sp,224
	addi	a0,sp,32
	call	uECC_vli_set
	li	a2,7
	addi	a1,sp,192
	addi	a0,sp,64
	call	uECC_vli_set
	slliw	s3,s3,1
	slliw	s3,s3,24
	sraiw	s3,s3,24
	addiw	a5,s6,-1
	andi	s6,a5,0xff
	bne	s6,zero,.L251
	addi	a5,sp,192
	addi	a4,sp,224
	addi	a3,sp,256
	addi	a2,sp,288
	addi	a1,sp,320
	addi	a0,sp,160
	call	mod_sqrt_secp224r1_rs
	li	s0,95
.L253:
	li	a2,7
	addi	a1,sp,160
	addi	a0,sp,256
	call	uECC_vli_set
	li	a2,7
	addi	a1,sp,320
	addi	a0,sp,224
	call	uECC_vli_set
	li	a2,7
	addi	a1,sp,288
	addi	a0,sp,192
	call	uECC_vli_set
	addi	a5,sp,192
	addi	a4,sp,224
	addi	a3,sp,256
	addi	a2,sp,288
	addi	a1,sp,320
	addi	a0,sp,160
	call	mod_sqrt_secp224r1_rs
	li	a1,7
	addi	a0,sp,160
	call	uECC_vli_isZero
	sext.w	a0,a0
	bne	a0,zero,.L252
	addiw	a5,s0,-1
	slli	s0,a5,48
	srli	s0,s0,48
	slli	a4,a5,48
	srli	a4,a4,48
	bne	a4,zero,.L253
.L252:
	lui	a2,%hi(.LANCHOR0)
	addi	a2,a2,%lo(.LANCHOR0)
	addi	s0,a2,400
	li	a3,7
	addi	a2,a2,404
	addi	a1,sp,224
	addi	a0,sp,288
	call	uECC_vli_modInv
	mv	a3,s0
	addi	a2,sp,288
	addi	a1,sp,256
	mv	a0,s4
	call	uECC_vli_modMult_fast
	ld	ra,408(sp)
	ld	s0,400(sp)
	ld	s1,392(sp)
	ld	s2,384(sp)
	ld	s3,376(sp)
	ld	s4,368(sp)
	ld	s5,360(sp)
	ld	s6,352(sp)
	addi	sp,sp,416
	jr	ra
	.size	mod_sqrt_secp224r1, .-mod_sqrt_secp224r1
	.align	1
	.type	double_jacobian_secp256k1, @function
double_jacobian_secp256k1:
	addi	sp,sp,-112
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	mv	s3,a0
	mv	s0,a1
	mv	s2,a2
	mv	s1,a3
	li	a1,8
	mv	a0,a2
	call	uECC_vli_isZero
	sext.w	a5,a0
	beq	a5,zero,.L264
.L259:
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	addi	sp,sp,112
	jr	ra
.L264:
	mv	a2,s1
	mv	a1,s0
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a3,s1
	mv	a2,sp
	mv	a1,s3
	addi	a0,sp,32
	call	uECC_vli_modMult_fast
	mv	a2,s1
	mv	a1,s3
	mv	a0,s3
	call	uECC_vli_modSquare_fast
	mv	a2,s1
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a3,s1
	mv	a2,s2
	mv	a1,s0
	mv	a0,s2
	call	uECC_vli_modMult_fast
	addi	s2,s1,4
	li	a4,8
	mv	a3,s2
	mv	a2,s3
	mv	a1,s3
	mv	a0,s0
	call	uECC_vli_modAdd
	li	a4,8
	mv	a3,s2
	mv	a2,s3
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modAdd
	li	a1,0
	mv	a0,s0
	call	uECC_vli_testBit
	sext.w	a0,a0
	beq	a0,zero,.L261
	sd	s4,64(sp)
	li	a3,8
	mv	a2,s2
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_add
	sext.w	s4,a0
	li	a1,8
	mv	a0,s0
	call	uECC_vli_rshift1
	slliw	s4,s4,31
	lw	a5,28(s0)
	or	a5,a5,s4
	sw	a5,28(s0)
	ld	s4,64(sp)
.L262:
	mv	a2,s1
	mv	a1,s0
	mv	a0,s3
	call	uECC_vli_modSquare_fast
	li	a4,8
	mv	a3,s2
	addi	a2,sp,32
	mv	a1,s3
	mv	a0,s3
	call	uECC_vli_modSub
	li	a4,8
	mv	a3,s2
	addi	a2,sp,32
	mv	a1,s3
	mv	a0,s3
	call	uECC_vli_modSub
	li	a4,8
	mv	a3,s2
	mv	a2,s3
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modSub
	mv	a3,s1
	addi	a2,sp,32
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modMult_fast
	li	a4,8
	mv	a3,s2
	mv	a2,sp
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modSub
	j	.L259
.L261:
	li	a1,8
	mv	a0,s0
	call	uECC_vli_rshift1
	j	.L262
	.size	double_jacobian_secp256k1, .-double_jacobian_secp256k1
	.align	1
	.type	x_side_secp256k1, @function
x_side_secp256k1:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	mv	s2,a1
	mv	s1,a2
	call	uECC_vli_modSquare_fast
	mv	a3,s1
	mv	a2,s2
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modMult_fast
	li	a4,8
	addi	a3,s1,4
	addi	a2,s1,132
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modAdd
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	ra
	.size	x_side_secp256k1, .-x_side_secp256k1
	.align	1
	.type	apply_z, @function
apply_z:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	mv	s3,a0
	mv	s1,a1
	mv	s2,a2
	mv	s0,a3
	mv	a2,a3
	mv	a1,s2
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a3,s0
	mv	a2,sp
	mv	a1,s3
	mv	a0,s3
	call	uECC_vli_modMult_fast
	mv	a3,s0
	mv	a2,s2
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modMult_fast
	mv	a3,s0
	mv	a2,sp
	mv	a1,s1
	mv	a0,s1
	call	uECC_vli_modMult_fast
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	addi	sp,sp,80
	jr	ra
	.size	apply_z, .-apply_z
	.align	1
	.type	XYcZ_add, @function
XYcZ_add:
	addi	sp,sp,-96
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s6,32(sp)
	mv	s4,a0
	mv	s6,a1
	mv	s0,a2
	mv	s2,a3
	mv	s1,a4
	lb	s3,0(a4)
	addi	s5,a4,4
	mv	a4,s3
	mv	a3,s5
	mv	a2,a0
	mv	a1,s0
	mv	a0,sp
	call	uECC_vli_modSub
	mv	a2,s1
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a3,s1
	mv	a2,sp
	mv	a1,s4
	mv	a0,s4
	call	uECC_vli_modMult_fast
	mv	a3,s1
	mv	a2,sp
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modMult_fast
	mv	a4,s3
	mv	a3,s5
	mv	a2,s6
	mv	a1,s2
	mv	a0,s2
	call	uECC_vli_modSub
	mv	a2,s1
	mv	a1,s2
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a4,s3
	mv	a3,s5
	mv	a2,s4
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modSub
	mv	a4,s3
	mv	a3,s5
	mv	a2,s0
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modSub
	mv	a4,s3
	mv	a3,s5
	mv	a2,s4
	mv	a1,s0
	mv	a0,s0
	call	uECC_vli_modSub
	mv	a3,s1
	mv	a2,s0
	mv	a1,s6
	mv	a0,s6
	call	uECC_vli_modMult_fast
	mv	a4,s3
	mv	a3,s5
	mv	a2,sp
	mv	a1,s4
	mv	a0,s0
	call	uECC_vli_modSub
	mv	a3,s1
	mv	a2,s0
	mv	a1,s2
	mv	a0,s2
	call	uECC_vli_modMult_fast
	mv	a4,s3
	mv	a3,s5
	mv	a2,s6
	mv	a1,s2
	mv	a0,s2
	call	uECC_vli_modSub
	mv	a2,s3
	mv	a1,sp
	mv	a0,s0
	call	uECC_vli_set
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	addi	sp,sp,96
	jr	ra
	.size	XYcZ_add, .-XYcZ_add
	.align	1
	.type	XYcZ_addC, @function
XYcZ_addC:
	addi	sp,sp,-160
	sd	ra,152(sp)
	sd	s0,144(sp)
	sd	s1,136(sp)
	sd	s2,128(sp)
	sd	s3,120(sp)
	sd	s4,112(sp)
	sd	s5,104(sp)
	sd	s6,96(sp)
	mv	s4,a0
	mv	s6,a1
	mv	s3,a2
	mv	s5,a3
	mv	s1,a4
	lb	s0,0(a4)
	addi	s2,a4,4
	mv	a4,s0
	mv	a3,s2
	mv	a2,a0
	mv	a1,s3
	addi	a0,sp,64
	call	uECC_vli_modSub
	mv	a2,s1
	addi	a1,sp,64
	mv	a0,a1
	call	uECC_vli_modSquare_fast
	mv	a3,s1
	addi	a2,sp,64
	mv	a1,s4
	mv	a0,s4
	call	uECC_vli_modMult_fast
	mv	a3,s1
	addi	a2,sp,64
	mv	a1,s3
	mv	a0,s3
	call	uECC_vli_modMult_fast
	mv	a4,s0
	mv	a3,s2
	mv	a2,s6
	mv	a1,s5
	addi	a0,sp,64
	call	uECC_vli_modAdd
	mv	a4,s0
	mv	a3,s2
	mv	a2,s6
	mv	a1,s5
	mv	a0,s5
	call	uECC_vli_modSub
	mv	a4,s0
	mv	a3,s2
	mv	a2,s4
	mv	a1,s3
	addi	a0,sp,32
	call	uECC_vli_modSub
	mv	a3,s1
	addi	a2,sp,32
	mv	a1,s6
	mv	a0,s6
	call	uECC_vli_modMult_fast
	mv	a4,s0
	mv	a3,s2
	mv	a2,s3
	mv	a1,s4
	addi	a0,sp,32
	call	uECC_vli_modAdd
	mv	a2,s1
	mv	a1,s5
	mv	a0,s3
	call	uECC_vli_modSquare_fast
	mv	a4,s0
	mv	a3,s2
	addi	a2,sp,32
	mv	a1,s3
	mv	a0,s3
	call	uECC_vli_modSub
	mv	a4,s0
	mv	a3,s2
	mv	a2,s3
	mv	a1,s4
	mv	a0,sp
	call	uECC_vli_modSub
	mv	a3,s1
	mv	a2,sp
	mv	a1,s5
	mv	a0,s5
	call	uECC_vli_modMult_fast
	mv	a4,s0
	mv	a3,s2
	mv	a2,s6
	mv	a1,s5
	mv	a0,s5
	call	uECC_vli_modSub
	mv	a2,s1
	addi	a1,sp,64
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	mv	a4,s0
	mv	a3,s2
	addi	a2,sp,32
	mv	a1,sp
	mv	a0,sp
	call	uECC_vli_modSub
	mv	a4,s0
	mv	a3,s2
	mv	a2,s4
	mv	a1,sp
	addi	a0,sp,32
	call	uECC_vli_modSub
	mv	a3,s1
	addi	a2,sp,64
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modMult_fast
	mv	a4,s0
	mv	a3,s2
	mv	a2,s6
	addi	a1,sp,32
	mv	a0,s6
	call	uECC_vli_modSub
	mv	a2,s0
	mv	a1,sp
	mv	a0,s4
	call	uECC_vli_set
	ld	ra,152(sp)
	ld	s0,144(sp)
	ld	s1,136(sp)
	ld	s2,128(sp)
	ld	s3,120(sp)
	ld	s4,112(sp)
	ld	s5,104(sp)
	ld	s6,96(sp)
	addi	sp,sp,160
	jr	ra
	.size	XYcZ_addC, .-XYcZ_addC
	.align	1
	.type	EccPoint_mult, @function
EccPoint_mult:
	addi	sp,sp,-304
	sd	ra,296(sp)
	sd	s0,288(sp)
	sd	s1,280(sp)
	sd	s2,272(sp)
	sd	s3,264(sp)
	sd	s4,256(sp)
	sd	s5,248(sp)
	sd	s6,240(sp)
	sd	s7,232(sp)
	sd	s8,224(sp)
	sd	s9,216(sp)
	sd	s10,208(sp)
	sd	s11,200(sp)
	mv	s8,a0
	mv	s9,a1
	mv	s6,a2
	mv	s0,a3
	mv	s2,a4
	mv	s3,a5
	lb	s7,0(a5)
	mv	a2,s7
	addi	a0,sp,160
	call	uECC_vli_set
	slli	s10,s7,2
	add	s11,s9,s10
	mv	a2,s7
	mv	a1,s11
	addi	a0,sp,96
	call	uECC_vli_set
	lb	s1,0(s3)
	beq	s0,zero,.L274
	mv	a2,s1
	mv	a1,s0
	mv	a0,sp
	call	uECC_vli_set
.L275:
	mv	a2,s1
	addi	a1,sp,160
	addi	a0,sp,128
	call	uECC_vli_set
	mv	a2,s1
	addi	a1,sp,96
	addi	a0,sp,64
	call	uECC_vli_set
	mv	a3,s3
	mv	a2,sp
	addi	a1,sp,96
	addi	a0,sp,160
	call	apply_z
	ld	a5,168(s3)
	mv	a3,s3
	mv	a2,sp
	addi	a1,sp,96
	addi	a0,sp,160
	jalr	a5
	mv	a3,s3
	mv	a2,sp
	addi	a1,sp,64
	addi	a0,sp,128
	call	apply_z
	addiw	s2,s2,-2
	slliw	s2,s2,16
	sraiw	s2,s2,16
	ble	s2,zero,.L276
.L277:
	mv	a1,s2
	mv	a0,s6
	call	uECC_vli_testBit
	sext.w	s0,a0
	snez	s1,s0
	slli	s1,s1,5
	addi	a5,sp,128
	add	s5,a5,s1
	addi	a5,sp,64
	add	s1,a5,s1
	seqz	s0,s0
	slli	s0,s0,5
	addi	a5,sp,128
	add	s4,a5,s0
	addi	a5,sp,64
	add	s0,a5,s0
	mv	a4,s3
	mv	a3,s0
	mv	a2,s4
	mv	a1,s1
	mv	a0,s5
	call	XYcZ_addC
	mv	a4,s3
	mv	a3,s1
	mv	a2,s5
	mv	a1,s0
	mv	a0,s4
	call	XYcZ_add
	addiw	s2,s2,-1
	slliw	s2,s2,16
	sraiw	s2,s2,16
	bne	s2,zero,.L277
.L276:
	li	a1,0
	mv	a0,s6
	call	uECC_vli_testBit
	sext.w	s0,a0
	snez	s1,s0
	slli	s1,s1,5
	addi	a5,sp,128
	add	s2,a5,s1
	addi	a5,sp,64
	add	s1,a5,s1
	seqz	s0,s0
	slli	s0,s0,5
	addi	a5,sp,128
	add	s4,a5,s0
	addi	a5,sp,64
	add	s0,a5,s0
	mv	a4,s3
	mv	a3,s0
	mv	a2,s4
	mv	a1,s1
	mv	a0,s2
	call	XYcZ_addC
	addi	s5,s3,4
	mv	a4,s7
	mv	a3,s5
	addi	a2,sp,128
	addi	a1,sp,160
	addi	a0,sp,32
	call	uECC_vli_modSub
	mv	a3,s3
	mv	a2,s1
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modMult_fast
	mv	a3,s3
	mv	a2,s9
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modMult_fast
	mv	a3,s7
	mv	a2,s5
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modInv
	mv	a3,s3
	mv	a2,s11
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modMult_fast
	mv	a3,s3
	mv	a2,s2
	addi	a1,sp,32
	mv	a0,a1
	call	uECC_vli_modMult_fast
	mv	a4,s3
	mv	a3,s1
	mv	a2,s2
	mv	a1,s0
	mv	a0,s4
	call	XYcZ_add
	mv	a3,s3
	addi	a2,sp,32
	addi	a1,sp,64
	addi	a0,sp,128
	call	apply_z
	mv	a2,s7
	addi	a1,sp,128
	mv	a0,s8
	call	uECC_vli_set
	mv	a2,s7
	addi	a1,sp,64
	add	a0,s8,s10
	call	uECC_vli_set
	ld	ra,296(sp)
	ld	s0,288(sp)
	ld	s1,280(sp)
	ld	s2,272(sp)
	ld	s3,264(sp)
	ld	s4,256(sp)
	ld	s5,248(sp)
	ld	s6,240(sp)
	ld	s7,232(sp)
	ld	s8,224(sp)
	ld	s9,216(sp)
	ld	s10,208(sp)
	ld	s11,200(sp)
	addi	sp,sp,304
	jr	ra
.L274:
	mv	a1,s1
	mv	a0,sp
	call	uECC_vli_clear
	li	a5,1
	sw	a5,0(sp)
	j	.L275
	.size	EccPoint_mult, .-EccPoint_mult
	.align	1
	.type	EccPoint_compute_public_key, @function
EccPoint_compute_public_key:
	addi	sp,sp,-128
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	s3,88(sp)
	mv	s2,a0
	mv	a0,a1
	mv	s1,a2
	addi	a1,sp,48
	sd	a1,0(sp)
	addi	a2,sp,16
	sd	a2,8(sp)
	mv	a3,s1
	call	regularize_k
	sext.w	s0,a0
	lui	a5,%hi(g_rng_function)
	ld	a5,%lo(g_rng_function)(a5)
	beq	a5,zero,.L283
	slli	a4,s0,32
	srli	a5,a4,29
	addi	a5,a5,80
	add	a5,a5,sp
	ld	s3,-80(a5)
	lb	a2,0(s1)
	addi	a1,s1,4
	mv	a0,s3
	call	uECC_generate_random_int
	mv	a5,a0
	li	a0,0
	beq	a5,zero,.L282
.L281:
	lhu	a4,2(s1)
	addiw	a4,a4,1
	seqz	s0,s0
	slli	s0,s0,3
	addi	a5,s0,80
	add	s0,a5,sp
	mv	a5,s1
	slliw	a4,a4,16
	sraiw	a4,a4,16
	mv	a3,s3
	ld	a2,-80(s0)
	addi	a1,s1,68
	mv	a0,s2
	call	EccPoint_mult
	lbu	a1,0(s1)
	slliw	a1,a1,1
	slliw	a1,a1,24
	sraiw	a1,a1,24
	mv	a0,s2
	call	uECC_vli_isZero
	sext.w	a0,a0
	seqz	a0,a0
.L282:
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	addi	sp,sp,128
	jr	ra
.L283:
	li	s3,0
	j	.L281
	.size	EccPoint_compute_public_key, .-EccPoint_compute_public_key
	.align	1
	.type	uECC_sign_with_k_internal, @function
uECC_sign_with_k_internal:
	addi	sp,sp,-256
	sd	ra,248(sp)
	sd	s1,232(sp)
	sd	s2,224(sp)
	sd	s3,216(sp)
	sd	s4,208(sp)
	sd	s5,200(sp)
	sd	s6,192(sp)
	sd	s7,184(sp)
	mv	s6,a0
	mv	s4,a1
	mv	s5,a2
	mv	s2,a3
	mv	s3,a4
	mv	s1,a5
	addi	a5,sp,112
	sd	a5,64(sp)
	addi	a5,sp,80
	sd	a5,72(sp)
	lb	s7,0(s1)
	mv	a1,s7
	mv	a0,a3
	call	uECC_vli_isZero
	sext.w	a0,a0
	bne	a0,zero,.L291
	sd	s0,240(sp)
	sd	s8,176(sp)
	sd	s10,160(sp)
	lh	s8,2(s1)
	addiw	a5,s8,31
	sraiw	s0,a5,31
	srliw	s0,s0,27
	addw	s0,s0,a5
	sraiw	s0,s0,5
	slliw	s0,s0,24
	sraiw	s0,s0,24
	addi	s10,s1,36
	mv	a2,s0
	mv	a1,s2
	mv	a0,s10
	call	uECC_vli_cmp
	mv	a4,a0
	li	a5,1
	li	a0,0
	beq	a4,a5,.L301
	ld	s0,240(sp)
	ld	s8,176(sp)
	ld	s10,160(sp)
.L287:
	ld	ra,248(sp)
	ld	s1,232(sp)
	ld	s2,224(sp)
	ld	s3,216(sp)
	ld	s4,208(sp)
	ld	s5,200(sp)
	ld	s6,192(sp)
	ld	s7,184(sp)
	addi	sp,sp,256
	jr	ra
.L301:
	sd	s9,168(sp)
	sd	s11,152(sp)
	mv	a3,s1
	addi	a2,sp,80
	addi	a1,sp,112
	mv	a0,s2
	call	regularize_k
	sext.w	s9,a0
	lui	a5,%hi(g_rng_function)
	ld	a5,%lo(g_rng_function)(a5)
	beq	a5,zero,.L293
	slli	a4,s9,32
	srli	a5,a4,29
	addi	a5,a5,144
	add	a5,a5,sp
	ld	s11,-80(a5)
	mv	a2,s7
	addi	a1,s1,4
	mv	a0,s11
	call	uECC_generate_random_int
	beq	a0,zero,.L302
.L288:
	addiw	a4,s8,1
	seqz	s9,s9
	slli	s9,s9,3
	addi	a5,s9,144
	add	s9,a5,sp
	mv	a5,s1
	slliw	a4,a4,16
	sraiw	a4,a4,16
	mv	a3,s11
	ld	a2,-80(s9)
	addi	a1,s1,68
	mv	a0,sp
	call	EccPoint_mult
	mv	a1,s7
	mv	a0,sp
	call	uECC_vli_isZero
	sext.w	a5,a0
	li	a0,0
	bne	a5,zero,.L298
	lui	a5,%hi(g_rng_function)
	ld	a5,%lo(g_rng_function)(a5)
	beq	a5,zero,.L303
	mv	a2,s0
	mv	a1,s10
	addi	a0,sp,112
	call	uECC_generate_random_int
	beq	a0,zero,.L299
.L290:
	mv	a4,s0
	mv	a3,s10
	addi	a2,sp,112
	mv	a1,s2
	mv	a0,s2
	call	uECC_vli_modMult
	mv	a3,s0
	mv	a2,s10
	mv	a1,s2
	mv	a0,s2
	call	uECC_vli_modInv
	mv	a4,s0
	mv	a3,s10
	addi	a2,sp,112
	mv	a1,s2
	mv	a0,s2
	call	uECC_vli_modMult
	mv	a2,sp
	lb	a1,1(s1)
	mv	a0,s3
	call	uECC_vli_nativeToBytes
	lh	a5,2(s1)
	addiw	a5,a5,7
	sraiw	a2,a5,31
	srliw	a2,a2,29
	addw	a2,a2,a5
	sraiw	a2,a2,3
	mv	a1,s6
	addi	a0,sp,112
	call	uECC_vli_bytesToNative
	addiw	a5,s0,-1
	slli	a5,a5,2
	addi	a5,a5,144
	add	a5,a5,sp
	sw	zero,-64(a5)
	mv	a2,s7
	mv	a1,sp
	addi	a0,sp,80
	call	uECC_vli_set
	mv	a4,s0
	mv	a3,s10
	addi	a2,sp,80
	addi	a1,sp,112
	mv	a0,a2
	call	uECC_vli_modMult
	mv	a3,s1
	mv	a2,s5
	mv	a1,s4
	addi	a0,sp,112
	call	bits2int
	mv	a4,s0
	mv	a3,s10
	addi	a2,sp,80
	addi	a1,sp,112
	mv	a0,a2
	call	uECC_vli_modAdd
	mv	a4,s0
	mv	a3,s10
	mv	a2,s2
	addi	a1,sp,80
	mv	a0,a1
	call	uECC_vli_modMult
	mv	a1,s0
	addi	a0,sp,80
	call	uECC_vli_numBits
	mv	a5,a0
	lb	a1,1(s1)
	slliw	a4,a1,3
	li	a0,0
	bge	a4,a5,.L304
	ld	s0,240(sp)
	ld	s8,176(sp)
	ld	s9,168(sp)
	ld	s10,160(sp)
	ld	s11,152(sp)
	j	.L287
.L302:
	ld	s0,240(sp)
	ld	s8,176(sp)
	ld	s9,168(sp)
	ld	s10,160(sp)
	ld	s11,152(sp)
	j	.L287
.L293:
	li	s11,0
	j	.L288
.L303:
	mv	a1,s0
	addi	a0,sp,112
	call	uECC_vli_clear
	li	a5,1
	sw	a5,112(sp)
	j	.L290
.L304:
	addi	a2,sp,80
	add	a0,s3,a1
	call	uECC_vli_nativeToBytes
	li	a0,1
	ld	s0,240(sp)
	ld	s8,176(sp)
	ld	s9,168(sp)
	ld	s10,160(sp)
	ld	s11,152(sp)
	j	.L287
.L291:
	li	a0,0
	j	.L287
.L298:
	ld	s0,240(sp)
	ld	s8,176(sp)
	ld	s9,168(sp)
	ld	s10,160(sp)
	ld	s11,152(sp)
	j	.L287
.L299:
	ld	s0,240(sp)
	ld	s8,176(sp)
	ld	s9,168(sp)
	ld	s10,160(sp)
	ld	s11,152(sp)
	j	.L287
	.size	uECC_sign_with_k_internal, .-uECC_sign_with_k_internal
	.align	1
	.globl	uECC_set_rng
	.type	uECC_set_rng, @function
uECC_set_rng:
	lui	a5,%hi(g_rng_function)
	sd	a0,%lo(g_rng_function)(a5)
	ret
	.size	uECC_set_rng, .-uECC_set_rng
	.align	1
	.globl	uECC_get_rng
	.type	uECC_get_rng, @function
uECC_get_rng:
	lui	a5,%hi(g_rng_function)
	ld	a0,%lo(g_rng_function)(a5)
	ret
	.size	uECC_get_rng, .-uECC_get_rng
	.align	1
	.globl	uECC_curve_private_key_size
	.type	uECC_curve_private_key_size, @function
uECC_curve_private_key_size:
	lh	a5,2(a0)
	addiw	a5,a5,7
	sraiw	a0,a5,31
	srliw	a0,a0,29
	addw	a0,a0,a5
	sraiw	a0,a0,3
	ret
	.size	uECC_curve_private_key_size, .-uECC_curve_private_key_size
	.align	1
	.globl	uECC_curve_public_key_size
	.type	uECC_curve_public_key_size, @function
uECC_curve_public_key_size:
	lb	a0,1(a0)
	slliw	a0,a0,1
	ret
	.size	uECC_curve_public_key_size, .-uECC_curve_public_key_size
	.align	1
	.globl	uECC_secp160r1
	.type	uECC_secp160r1, @function
uECC_secp160r1:
	lui	a0,%hi(.LANCHOR0)
	addi	a0,a0,%lo(.LANCHOR0)
	ret
	.size	uECC_secp160r1, .-uECC_secp160r1
	.align	1
	.globl	uECC_secp192r1
	.type	uECC_secp192r1, @function
uECC_secp192r1:
	lui	a0,%hi(.LANCHOR0+200)
	addi	a0,a0,%lo(.LANCHOR0+200)
	ret
	.size	uECC_secp192r1, .-uECC_secp192r1
	.align	1
	.globl	uECC_secp224r1
	.type	uECC_secp224r1, @function
uECC_secp224r1:
	lui	a0,%hi(.LANCHOR0+400)
	addi	a0,a0,%lo(.LANCHOR0+400)
	ret
	.size	uECC_secp224r1, .-uECC_secp224r1
	.align	1
	.globl	uECC_secp256r1
	.type	uECC_secp256r1, @function
uECC_secp256r1:
	lui	a0,%hi(.LANCHOR0+600)
	addi	a0,a0,%lo(.LANCHOR0+600)
	ret
	.size	uECC_secp256r1, .-uECC_secp256r1
	.align	1
	.globl	uECC_secp256k1
	.type	uECC_secp256k1, @function
uECC_secp256k1:
	lui	a0,%hi(.LANCHOR0+800)
	addi	a0,a0,%lo(.LANCHOR0+800)
	ret
	.size	uECC_secp256k1, .-uECC_secp256k1
	.align	1
	.globl	uECC_make_key
	.type	uECC_make_key, @function
uECC_make_key:
	addi	sp,sp,-144
	sd	ra,136(sp)
	sd	s0,128(sp)
	sd	s1,120(sp)
	sd	s2,112(sp)
	sd	s3,104(sp)
	sd	s4,96(sp)
	mv	s3,a0
	mv	s4,a1
	mv	s1,a2
	li	s0,64
	addi	s2,a2,36
.L317:
	lh	a5,2(s1)
	addiw	a5,a5,31
	sraiw	a2,a5,31
	srliw	a2,a2,27
	addw	a2,a2,a5
	sraiw	a2,a2,5
	slliw	a2,a2,24
	sraiw	a2,a2,24
	mv	a1,s2
	addi	a0,sp,64
	call	uECC_generate_random_int
	beq	a0,zero,.L315
	mv	a2,s1
	addi	a1,sp,64
	mv	a0,sp
	call	EccPoint_compute_public_key
	sext.w	a0,a0
	bne	a0,zero,.L320
	addiw	s0,s0,-1
	bne	s0,zero,.L317
	li	a0,0
	j	.L315
.L320:
	lh	a5,2(s1)
	addiw	a5,a5,7
	sraiw	a1,a5,31
	srliw	a1,a1,29
	addw	a1,a1,a5
	addi	a2,sp,64
	sraiw	a1,a1,3
	mv	a0,s4
	call	uECC_vli_nativeToBytes
	mv	a2,sp
	lb	a1,1(s1)
	mv	a0,s3
	call	uECC_vli_nativeToBytes
	lb	a1,1(s1)
	lb	a2,0(s1)
	slli	a2,a2,2
	add	a2,sp,a2
	add	a0,s3,a1
	call	uECC_vli_nativeToBytes
	li	a0,1
.L315:
	ld	ra,136(sp)
	ld	s0,128(sp)
	ld	s1,120(sp)
	ld	s2,112(sp)
	ld	s3,104(sp)
	ld	s4,96(sp)
	addi	sp,sp,144
	jr	ra
	.size	uECC_make_key, .-uECC_make_key
	.align	1
	.globl	uECC_shared_secret
	.type	uECC_shared_secret, @function
uECC_shared_secret:
	addi	sp,sp,-208
	sd	ra,200(sp)
	sd	s0,192(sp)
	sd	s1,184(sp)
	sd	s2,176(sp)
	sd	s3,168(sp)
	sd	s4,160(sp)
	sd	s5,152(sp)
	sd	s6,144(sp)
	mv	s4,a0
	mv	s3,a2
	mv	s0,a3
	addi	s1,sp,48
	sd	s1,0(sp)
	addi	s6,sp,16
	sd	s6,8(sp)
	lb	s5,0(a3)
	lb	s2,1(a3)
	lh	a4,2(a3)
	addiw	a4,a4,7
	sraiw	a5,a4,31
	srliw	a5,a5,29
	addw	a5,a5,a4
	sraiw	a2,a5,3
	mv	a0,s1
	call	uECC_vli_bytesToNative
	mv	a2,s2
	mv	a1,s4
	addi	a0,sp,80
	call	uECC_vli_bytesToNative
	slli	a0,s5,2
	mv	a2,s2
	add	a1,s4,s2
	addi	a5,sp,80
	add	a0,a5,a0
	call	uECC_vli_bytesToNative
	mv	a3,s0
	mv	a2,s6
	mv	a1,s1
	mv	a0,s1
	call	regularize_k
	sext.w	s1,a0
	lui	a5,%hi(g_rng_function)
	ld	a5,%lo(g_rng_function)(a5)
	beq	a5,zero,.L324
	slli	a4,s1,32
	srli	a5,a4,29
	addi	a5,a5,144
	add	a5,a5,sp
	ld	s4,-144(a5)
	mv	a2,s5
	addi	a1,s0,4
	mv	a0,s4
	call	uECC_generate_random_int
	beq	a0,zero,.L323
.L322:
	lhu	a4,2(s0)
	addiw	a4,a4,1
	seqz	s1,s1
	slli	s1,s1,3
	addi	a5,s1,144
	add	s1,a5,sp
	mv	a5,s0
	slliw	a4,a4,16
	sraiw	a4,a4,16
	mv	a3,s4
	ld	a2,-144(s1)
	addi	a1,sp,80
	mv	a0,a1
	call	EccPoint_mult
	addi	a2,sp,80
	mv	a1,s2
	mv	a0,s3
	call	uECC_vli_nativeToBytes
	lbu	a1,0(s0)
	slliw	a1,a1,1
	slliw	a1,a1,24
	sraiw	a1,a1,24
	addi	a0,sp,80
	call	uECC_vli_isZero
	sext.w	a0,a0
	seqz	a0,a0
.L323:
	ld	ra,200(sp)
	ld	s0,192(sp)
	ld	s1,184(sp)
	ld	s2,176(sp)
	ld	s3,168(sp)
	ld	s4,160(sp)
	ld	s5,152(sp)
	ld	s6,144(sp)
	addi	sp,sp,208
	jr	ra
.L324:
	li	s4,0
	j	.L322
	.size	uECC_shared_secret, .-uECC_shared_secret
	.align	1
	.globl	uECC_compress
	.type	uECC_compress, @function
uECC_compress:
	lb	a4,1(a2)
	ble	a4,zero,.L327
	li	a5,0
.L328:
	add	a4,a0,a5
	lbu	a3,0(a4)
	add	a4,a1,a5
	sb	a3,1(a4)
	addiw	a5,a5,1
	slliw	a5,a5,24
	sraiw	a5,a5,24
	lb	a4,1(a2)
	bgt	a4,a5,.L328
.L327:
	slliw	a4,a4,1
	add	a0,a0,a4
	lbu	a5,-1(a0)
	andi	a5,a5,1
	addiw	a5,a5,2
	sb	a5,0(a1)
	ret
	.size	uECC_compress, .-uECC_compress
	.align	1
	.globl	uECC_decompress
	.type	uECC_decompress, @function
uECC_decompress:
	addi	sp,sp,-112
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	mv	s3,a0
	mv	s2,a1
	mv	s0,a2
	lb	s1,0(a2)
	slli	s1,s1,2
	add	s1,sp,s1
	lb	a2,1(a2)
	addi	a1,a0,1
	mv	a0,sp
	call	uECC_vli_bytesToNative
	ld	a5,184(s0)
	mv	a2,s0
	mv	a1,sp
	mv	a0,s1
	jalr	a5
	ld	a5,176(s0)
	mv	a1,s0
	mv	a0,s1
	jalr	a5
	lbu	a4,0(s3)
	lw	a5,0(s1)
	xor	a5,a5,a4
	andi	a5,a5,1
	bne	a5,zero,.L333
.L331:
	mv	a2,sp
	lb	a1,1(s0)
	mv	a0,s2
	call	uECC_vli_nativeToBytes
	lb	a1,1(s0)
	mv	a2,s1
	add	a0,s2,a1
	call	uECC_vli_nativeToBytes
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	addi	sp,sp,112
	jr	ra
.L333:
	lb	a3,0(s0)
	mv	a2,s1
	addi	a1,s0,4
	mv	a0,s1
	call	uECC_vli_sub
	j	.L331
	.size	uECC_decompress, .-uECC_decompress
	.align	1
	.globl	uECC_valid_public_key
	.type	uECC_valid_public_key, @function
uECC_valid_public_key:
	addi	sp,sp,-192
	sd	ra,184(sp)
	sd	s0,176(sp)
	sd	s1,168(sp)
	sd	s2,160(sp)
	sd	s3,152(sp)
	mv	s0,a0
	mv	s1,a1
	lb	s2,1(a1)
	mv	a2,s2
	mv	a1,a0
	addi	a0,sp,64
	call	uECC_vli_bytesToNative
	lb	a0,0(s1)
	slli	a0,a0,2
	mv	a2,s2
	add	a1,s0,s2
	addi	a5,sp,64
	add	a0,a5,a0
	call	uECC_vli_bytesToNative
	lb	s2,0(s1)
	andi	s0,s2,0xff
	slliw	a1,s0,1
	slliw	a1,a1,24
	sraiw	a1,a1,24
	addi	a0,sp,64
	call	uECC_vli_isZero
	sext.w	s3,a0
	li	a5,0
	bne	s3,zero,.L335
	sd	s4,144(sp)
	addi	s4,s1,4
	mv	a2,s2
	addi	a1,sp,64
	mv	a0,s4
	call	uECC_vli_cmp_unsafe
	li	a4,1
	li	a5,0
	bne	a0,a4,.L343
	sd	s5,136(sp)
	slli	a5,s2,2
	addi	a4,sp,64
	add	s5,a4,a5
	mv	a2,s2
	mv	a1,s5
	mv	a0,s4
	call	uECC_vli_cmp_unsafe
	li	a4,1
	li	a5,0
	beq	a0,a4,.L345
	ld	s4,144(sp)
	ld	s5,136(sp)
	j	.L335
.L345:
	mv	a2,s1
	mv	a1,s5
	mv	a0,sp
	call	uECC_vli_modSquare_fast
	ld	a5,184(s1)
	mv	a2,s1
	addi	a1,sp,64
	addi	a0,sp,32
	jalr	a5
	addiw	a5,s0,-1
	slliw	a5,a5,24
	sraiw	a5,a5,24
	blt	a5,zero,.L336
	slli	a4,a5,2
	add	a2,sp,a4
	addi	a3,sp,32
	add	a3,a3,a4
.L337:
	lw	a4,0(a2)
	lw	a1,0(a3)
	xor	a4,a4,a1
	or	s3,a4,s3
	addiw	a5,a5,-1
	slliw	a5,a5,24
	sraiw	a5,a5,24
	addi	a2,a2,-4
	addi	a3,a3,-4
	bge	a5,zero,.L337
.L336:
	seqz	a5,s3
	ld	s4,144(sp)
	ld	s5,136(sp)
	j	.L335
.L343:
	ld	s4,144(sp)
.L335:
	mv	a0,a5
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	addi	sp,sp,192
	jr	ra
	.size	uECC_valid_public_key, .-uECC_valid_public_key
	.align	1
	.globl	uECC_compute_public_key
	.type	uECC_compute_public_key, @function
uECC_compute_public_key:
	addi	sp,sp,-128
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	mv	s2,a1
	mv	s1,a2
	lh	s0,2(a2)
	addiw	a4,s0,7
	sraiw	a5,a4,31
	srliw	a5,a5,29
	addw	a5,a5,a4
	sraiw	a2,a5,3
	mv	a1,a0
	addi	a0,sp,64
	call	uECC_vli_bytesToNative
	addiw	a5,s0,31
	sraiw	s0,a5,31
	srliw	s0,s0,27
	addw	s0,s0,a5
	sraiw	s0,s0,5
	slliw	s0,s0,24
	sraiw	s0,s0,24
	mv	a1,s0
	addi	a0,sp,64
	call	uECC_vli_isZero
	sext.w	a0,a0
	bne	a0,zero,.L348
	mv	a2,s0
	addi	a1,sp,64
	addi	a0,s1,36
	call	uECC_vli_cmp
	mv	a4,a0
	li	a5,1
	li	a0,0
	beq	a4,a5,.L352
.L347:
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	addi	sp,sp,128
	jr	ra
.L352:
	mv	a2,s1
	addi	a1,sp,64
	mv	a0,sp
	call	EccPoint_compute_public_key
	sext.w	a5,a0
	li	a0,0
	beq	a5,zero,.L347
	mv	a2,sp
	lb	a1,1(s1)
	mv	a0,s2
	call	uECC_vli_nativeToBytes
	lb	a1,1(s1)
	lb	a2,0(s1)
	slli	a2,a2,2
	add	a2,sp,a2
	add	a0,s2,a1
	call	uECC_vli_nativeToBytes
	li	a0,1
	j	.L347
.L348:
	li	a0,0
	j	.L347
	.size	uECC_compute_public_key, .-uECC_compute_public_key
	.align	1
	.globl	uECC_sign_with_k
	.type	uECC_sign_with_k, @function
uECC_sign_with_k:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	mv	s1,a0
	mv	s2,a1
	mv	s3,a2
	mv	a1,a3
	mv	s4,a4
	mv	s0,a5
	lh	a3,2(a5)
	addiw	a3,a3,7
	sraiw	a5,a3,31
	srliw	a5,a5,29
	addw	a5,a5,a3
	mv	a3,s0
	sraiw	a2,a5,3
	mv	a0,sp
	call	bits2int
	mv	a5,s0
	mv	a4,s4
	mv	a3,sp
	mv	a2,s3
	mv	a1,s2
	mv	a0,s1
	call	uECC_sign_with_k_internal
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	addi	sp,sp,80
	jr	ra
	.size	uECC_sign_with_k, .-uECC_sign_with_k
	.align	1
	.globl	uECC_sign
	.type	uECC_sign, @function
uECC_sign:
	addi	sp,sp,-96
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s6,32(sp)
	mv	s5,a0
	mv	s4,a1
	mv	s3,a2
	mv	s2,a3
	mv	s1,a4
	li	s0,64
	addi	s6,a4,36
.L357:
	lh	a5,2(s1)
	addiw	a5,a5,31
	sraiw	a2,a5,31
	srliw	a2,a2,27
	addw	a2,a2,a5
	sraiw	a2,a2,5
	slliw	a2,a2,24
	sraiw	a2,a2,24
	mv	a1,s6
	mv	a0,sp
	call	uECC_generate_random_int
	beq	a0,zero,.L356
	mv	a5,s1
	mv	a4,s2
	mv	a3,sp
	mv	a2,s3
	mv	a1,s4
	mv	a0,s5
	call	uECC_sign_with_k_internal
	bne	a0,zero,.L358
	addiw	s0,s0,-1
	bne	s0,zero,.L357
	j	.L356
.L358:
	li	a0,1
.L356:
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	addi	sp,sp,96
	jr	ra
	.size	uECC_sign, .-uECC_sign
	.align	1
	.globl	uECC_sign_deterministic
	.type	uECC_sign_deterministic, @function
uECC_sign_deterministic:
	addi	sp,sp,-176
	sd	ra,168(sp)
	sd	s0,160(sp)
	sd	s1,152(sp)
	sd	s2,144(sp)
	sd	s3,136(sp)
	sd	s4,128(sp)
	sd	s5,120(sp)
	sd	s6,112(sp)
	sd	s7,104(sp)
	sd	s8,96(sp)
	sd	s9,88(sp)
	sd	s10,80(sp)
	sd	s11,72(sp)
	mv	s8,a0
	sd	a1,8(sp)
	mv	s7,a2
	mv	s2,a3
	sd	a4,16(sp)
	mv	s9,a5
	ld	s4,32(a3)
	lw	a4,28(a3)
	slli	s1,a4,32
	srli	s1,s1,32
	add	s1,s4,s1
	lb	s0,1(a5)
	lh	s5,2(a5)
	mv	s11,s5
	addiw	a3,s5,31
	sraiw	a5,a3,31
	srliw	a5,a5,27
	addw	a5,a5,a3
	sraiw	a5,a5,5
	slliw	s6,a5,24
	sraiw	s6,s6,24
	beq	a4,zero,.L362
	li	a5,0
	li	a2,1
.L363:
	add	a4,s1,a5
	sb	a2,0(a4)
	add	a4,s4,a5
	sb	zero,0(a4)
	addi	a5,a5,1
	lw	a3,28(s2)
	sext.w	a4,a5
	bgtu	a3,a4,.L363
.L362:
	mv	a1,s4
	mv	a0,s2
	call	HMAC_init
	lwu	a5,28(s2)
	add	a5,s1,a5
	sb	zero,0(a5)
	lw	a2,28(s2)
	addiw	a2,a2,1
	mv	a1,s1
	mv	a0,s2
	call	HMAC_update
	mv	a2,s0
	mv	a1,s8
	mv	a0,s2
	call	HMAC_update
	mv	a2,s7
	ld	s3,8(sp)
	mv	a1,s3
	mv	a0,s2
	call	HMAC_update
	mv	a2,s4
	mv	a1,s4
	mv	a0,s2
	call	HMAC_finish
	mv	a2,s1
	mv	a1,s4
	mv	a0,s2
	call	update_V
	mv	a1,s4
	mv	a0,s2
	call	HMAC_init
	lwu	a5,28(s2)
	add	a5,s1,a5
	li	a4,1
	sb	a4,0(a5)
	lw	a2,28(s2)
	addiw	a2,a2,1
	mv	a1,s1
	mv	a0,s2
	call	HMAC_update
	mv	a2,s0
	mv	a1,s8
	mv	a0,s2
	call	HMAC_update
	mv	a2,s7
	mv	a1,s3
	mv	a0,s2
	call	HMAC_update
	mv	a2,s4
	mv	a1,s4
	mv	a0,s2
	call	HMAC_finish
	mv	a2,s1
	mv	a1,s4
	mv	a0,s2
	call	update_V
	slliw	s0,s6,2
	slliw	s10,s6,5
	slliw	a5,s6,5
	subw	a5,a5,s5
	li	a4,-1
	srlw	a5,a4,a5
	sd	a5,24(sp)
	li	s5,64
	addiw	s6,s6,-1
	slli	s6,s6,2
	addi	a5,s6,32
	addi	a4,sp,32
	add	s6,a5,a4
	j	.L374
.L365:
	blt	s11,s10,.L368
.L369:
	mv	a5,s9
	ld	a4,16(sp)
	addi	a3,sp,32
	mv	a2,s7
	ld	a1,8(sp)
	mv	a0,s8
	call	uECC_sign_with_k_internal
	mv	s3,a0
	bne	a0,zero,.L381
	mv	a1,s4
	mv	a0,s2
	call	HMAC_init
	lwu	a5,28(s2)
	add	a5,s1,a5
	sb	zero,0(a5)
	lw	a2,28(s2)
	addiw	a2,a2,1
	mv	a1,s1
	mv	a0,s2
	call	HMAC_update
	mv	a2,s4
	mv	a1,s4
	mv	a0,s2
	call	HMAC_finish
	mv	a2,s1
	mv	a1,s4
	mv	a0,s2
	call	update_V
	addiw	s5,s5,-1
	beq	s5,zero,.L373
.L374:
	li	s3,0
	j	.L371
.L375:
	mv	a5,s3
.L364:
	mv	s3,a5
.L371:
	mv	a2,s1
	mv	a1,s4
	mv	a0,s2
	call	update_V
	lw	a1,28(s2)
	beq	a1,zero,.L375
	addiw	a5,s3,1
	slliw	a5,a5,24
	sraiw	a5,a5,24
	addi	a4,s3,32
	addi	a3,sp,32
	add	s3,a4,a3
	lbu	a4,0(s1)
	sb	a4,-32(s3)
	bge	a5,s0,.L365
	mv	a3,s1
	addiw	a1,a1,-1
	slli	a1,a1,32
	srli	a1,a1,32
	add	a1,a1,s1
.L367:
	beq	a3,a1,.L364
	addiw	a4,a5,1
	slliw	a4,a4,24
	sraiw	a4,a4,24
	addi	a5,a5,32
	addi	a2,sp,32
	add	a5,a5,a2
	lbu	a2,1(a3)
	sb	a2,-32(a5)
	addi	a3,a3,1
	bge	a4,s0,.L365
	mv	a5,a4
	j	.L367
.L368:
	lw	a5,-32(s6)
	ld	a4,24(sp)
	and	a5,a5,a4
	sw	a5,-32(s6)
	j	.L369
.L381:
	li	s3,1
.L373:
	mv	a0,s3
	ld	ra,168(sp)
	ld	s0,160(sp)
	ld	s1,152(sp)
	ld	s2,144(sp)
	ld	s3,136(sp)
	ld	s4,128(sp)
	ld	s5,120(sp)
	ld	s6,112(sp)
	ld	s7,104(sp)
	ld	s8,96(sp)
	ld	s9,88(sp)
	ld	s10,80(sp)
	ld	s11,72(sp)
	addi	sp,sp,176
	jr	ra
	.size	uECC_sign_deterministic, .-uECC_sign_deterministic
	.align	1
	.globl	uECC_verify
	.type	uECC_verify, @function
uECC_verify:
	addi	sp,sp,-576
	sd	ra,568(sp)
	sd	s0,560(sp)
	sd	s1,552(sp)
	sd	s2,544(sp)
	sd	s3,536(sp)
	sd	s4,528(sp)
	sd	s5,520(sp)
	sd	s6,512(sp)
	sd	s7,504(sp)
	sd	s8,496(sp)
	sd	s9,488(sp)
	sd	s10,480(sp)
	mv	s6,a0
	mv	s3,a1
	mv	s7,a2
	mv	s4,a3
	mv	s1,a4
	lb	s2,0(a4)
	lh	a5,2(a4)
	addiw	a5,a5,31
	sraiw	s0,a5,31
	srliw	s0,s0,27
	addw	s0,s0,a5
	sraiw	s0,s0,5
	slliw	s0,s0,24
	sraiw	s0,s0,24
	addiw	s9,s0,-1
	slli	a5,s9,2
	addi	a5,a5,480
	add	a5,a5,sp
	sw	zero,-192(a5)
	sw	zero,-448(a5)
	sw	zero,-480(a5)
	lb	s10,1(a4)
	mv	a2,s10
	mv	a1,a0
	addi	a0,sp,64
	call	uECC_vli_bytesToNative
	slli	s5,s2,2
	addi	a5,sp,64
	add	s8,a5,s5
	mv	a2,s10
	add	a1,s6,s10
	mv	a0,s8
	call	uECC_vli_bytesToNative
	mv	a2,s10
	mv	a1,s4
	addi	a0,sp,32
	call	uECC_vli_bytesToNative
	mv	a2,s10
	add	a1,s4,s10
	mv	a0,sp
	call	uECC_vli_bytesToNative
	mv	a1,s2
	addi	a0,sp,32
	call	uECC_vli_isZero
	sext.w	a0,a0
	bne	a0,zero,.L391
	mv	a1,s2
	mv	a0,sp
	call	uECC_vli_isZero
	sext.w	s4,a0
	li	a0,0
	bne	s4,zero,.L383
	addi	s6,s1,36
	mv	a2,s0
	addi	a1,sp,32
	mv	a0,s6
	call	uECC_vli_cmp_unsafe
	mv	a4,a0
	li	a5,1
	li	a0,0
	bne	a4,a5,.L383
	mv	a2,s0
	mv	a1,sp
	mv	a0,s6
	call	uECC_vli_cmp_unsafe
	mv	a4,a0
	li	a5,1
	li	a0,0
	bne	a4,a5,.L383
	mv	a3,s0
	mv	a2,s6
	mv	a1,sp
	addi	a0,sp,384
	call	uECC_vli_modInv
	slli	s9,s9,2
	addi	a5,s9,480
	add	s9,a5,sp
	sw	zero,-32(s9)
	mv	a3,s1
	mv	a2,s7
	mv	a1,s3
	addi	a0,sp,448
	call	bits2int
	mv	a4,s0
	mv	a3,s6
	addi	a2,sp,384
	addi	a1,sp,448
	mv	a0,a1
	call	uECC_vli_modMult
	mv	a4,s0
	mv	a3,s6
	addi	a2,sp,384
	addi	a1,sp,32
	addi	a0,sp,416
	call	uECC_vli_modMult
	addi	s10,sp,64
	addi	s3,sp,320
	mv	a2,s2
	mv	a1,s10
	mv	a0,s3
	call	uECC_vli_set
	add	s9,s3,s5
	mv	a2,s2
	mv	a1,s8
	mv	a0,s9
	call	uECC_vli_set
	addi	s8,s1,68
	mv	a2,s2
	mv	a1,s8
	addi	a0,sp,224
	call	uECC_vli_set
	mv	a2,s2
	add	a1,s8,s5
	addi	a0,sp,192
	call	uECC_vli_set
	addi	s7,s1,4
	mv	a4,s2
	mv	a3,s7
	addi	a2,sp,224
	mv	a1,s3
	addi	a0,sp,384
	call	uECC_vli_modSub
	mv	a4,s1
	mv	a3,s9
	mv	a2,s3
	addi	a1,sp,192
	addi	a0,sp,224
	call	XYcZ_add
	mv	a3,s2
	mv	a2,s7
	addi	a1,sp,384
	mv	a0,a1
	call	uECC_vli_modInv
	mv	a3,s1
	addi	a2,sp,384
	mv	a1,s9
	mv	a0,s3
	call	apply_z
	sd	zero,128(sp)
	sd	s8,136(sp)
	sd	s10,144(sp)
	sd	s3,152(sp)
	mv	a1,s0
	addi	a0,sp,448
	call	uECC_vli_numBits
	mv	s8,a0
	mv	a1,s0
	addi	a0,sp,416
	call	uECC_vli_numBits
	mv	s3,s8
	bge	s8,a0,.L384
	mv	s3,a0
.L384:
	slli	s3,s3,48
	srli	s3,s3,48
	addiw	s9,s3,-1
	slliw	s9,s9,16
	sraiw	s9,s9,16
	mv	a1,s9
	addi	a0,sp,448
	call	uECC_vli_testBit
	sext.w	s8,a0
	mv	a1,s9
	addi	a0,sp,416
	call	uECC_vli_testBit
	sext.w	a5,a0
	snez	a5,a5
	slliw	a5,a5,1
	snez	s8,s8
	or	a5,a5,s8
	sext.w	a5,a5
	slli	a5,a5,3
	addi	a5,a5,480
	add	a5,a5,sp
	ld	s8,-352(a5)
	mv	a2,s2
	mv	a1,s8
	addi	a0,sp,288
	call	uECC_vli_set
	mv	a2,s2
	add	a1,s8,s5
	addi	a0,sp,256
	call	uECC_vli_set
	mv	a1,s2
	addi	a0,sp,384
	call	uECC_vli_clear
	li	a5,1
	sw	a5,384(sp)
	addiw	s3,s3,-2
	slliw	s3,s3,16
	sraiw	s3,s3,16
	bge	s3,zero,.L387
.L385:
	mv	a3,s2
	mv	a2,s7
	addi	a1,sp,384
	mv	a0,a1
	call	uECC_vli_modInv
	mv	a3,s1
	addi	a2,sp,384
	addi	a1,sp,256
	addi	a0,sp,288
	call	apply_z
	mv	a2,s0
	addi	a1,sp,288
	mv	a0,s6
	call	uECC_vli_cmp_unsafe
	li	a5,1
	bne	a0,a5,.L398
.L388:
	addiw	s2,s2,-1
	slliw	s2,s2,24
	sraiw	s2,s2,24
	blt	s2,zero,.L389
	slli	a5,s2,2
	addi	a4,sp,288
	add	a3,a4,a5
	addi	a4,sp,32
	add	a4,a4,a5
.L390:
	lw	a5,0(a3)
	lw	a2,0(a4)
	xor	a5,a5,a2
	or	s4,a5,s4
	addiw	s2,s2,-1
	slliw	s2,s2,24
	sraiw	s2,s2,24
	addi	a3,a3,-4
	addi	a4,a4,-4
	bge	s2,zero,.L390
.L389:
	seqz	a0,s4
	j	.L383
.L386:
	addiw	s3,s3,-1
	slliw	s3,s3,16
	sraiw	s3,s3,16
	blt	s3,zero,.L385
.L387:
	ld	a5,168(s1)
	mv	a3,s1
	addi	a2,sp,384
	addi	a1,sp,256
	addi	a0,sp,288
	jalr	a5
	mv	a1,s3
	addi	a0,sp,448
	call	uECC_vli_testBit
	sext.w	s8,a0
	mv	a1,s3
	addi	a0,sp,416
	call	uECC_vli_testBit
	sext.w	a5,a0
	snez	a5,a5
	slliw	a5,a5,1
	snez	s8,s8
	or	a5,a5,s8
	slli	a5,a5,32
	srli	a5,a5,32
	slli	a5,a5,3
	addi	a5,a5,480
	add	a5,a5,sp
	ld	s8,-352(a5)
	beq	s8,zero,.L386
	mv	a2,s2
	mv	a1,s8
	addi	a0,sp,224
	call	uECC_vli_set
	mv	a2,s2
	add	a1,s8,s5
	addi	a0,sp,192
	call	uECC_vli_set
	mv	a3,s1
	addi	a2,sp,384
	addi	a1,sp,192
	addi	a0,sp,224
	call	apply_z
	mv	a4,s2
	mv	a3,s7
	addi	a2,sp,224
	addi	a1,sp,288
	addi	a0,sp,160
	call	uECC_vli_modSub
	mv	a4,s1
	addi	a3,sp,256
	addi	a2,sp,288
	addi	a1,sp,192
	addi	a0,sp,224
	call	XYcZ_add
	mv	a3,s1
	addi	a2,sp,160
	addi	a1,sp,384
	mv	a0,a1
	call	uECC_vli_modMult_fast
	j	.L386
.L398:
	mv	a3,s0
	mv	a2,s6
	addi	a1,sp,288
	mv	a0,a1
	call	uECC_vli_sub
	j	.L388
.L391:
	li	a0,0
.L383:
	ld	ra,568(sp)
	ld	s0,560(sp)
	ld	s1,552(sp)
	ld	s2,544(sp)
	ld	s3,536(sp)
	ld	s4,528(sp)
	ld	s5,520(sp)
	ld	s6,512(sp)
	ld	s7,504(sp)
	ld	s8,496(sp)
	ld	s9,488(sp)
	ld	s10,480(sp)
	addi	sp,sp,576
	jr	ra
	.size	uECC_verify, .-uECC_verify
	.section	.rodata
	.align	3
	.set	.LANCHOR0,. + 0
	.type	curve_secp160r1, @object
	.size	curve_secp160r1, 200
curve_secp160r1:
	.byte	5
	.byte	20
	.half	161
	.word	2147483647
	.word	-1
	.word	-1
	.word	-1
	.word	-1
	.zero	12
	.word	-898293161
	.word	-114839853
	.word	128200
	.word	0
	.word	0
	.word	1
	.zero	8
	.word	332135554
	.word	1757645753
	.word	1180985737
	.word	-1896516824
	.word	1251390824
	.word	2059795250
	.word	69423415
	.word	1507641618
	.word	828937341
	.word	598091861
	.zero	24
	.word	-983172539
	.word	-2116758355
	.word	1705834655
	.word	1421703819
	.word	479706876
	.zero	12
	.zero	4
	.dword	double_jacobian_default
	.dword	mod_sqrt_default
	.dword	x_side_default
	.dword	vli_mmod_fast_secp160r1
	.type	curve_secp192r1, @object
	.size	curve_secp192r1, 200
curve_secp192r1:
	.byte	6
	.byte	24
	.half	192
	.word	-1
	.word	-1
	.word	-2
	.word	-1
	.word	-1
	.word	-1
	.zero	8
	.word	-1261295567
	.word	342608305
	.word	-1713440714
	.word	-1
	.word	-1
	.word	-1
	.zero	8
	.word	-2097213422
	.word	-184612099
	.word	1134659584
	.word	2092900587
	.word	-1338994442
	.word	411936782
	.word	511264785
	.word	1945728929
	.word	1797574101
	.word	1661997549
	.word	-3614088
	.word	119090069
	.zero	16
	.word	-1052329551
	.word	-21438740
	.word	1914974281
	.word	262662571
	.word	-442728217
	.word	1679885593
	.zero	8
	.zero	4
	.dword	double_jacobian_default
	.dword	mod_sqrt_default
	.dword	x_side_default
	.dword	vli_mmod_fast_secp192r1
	.type	curve_secp224r1, @object
	.size	curve_secp224r1, 200
curve_secp224r1:
	.byte	7
	.byte	28
	.half	224
	.word	1
	.word	0
	.word	0
	.word	-1
	.word	-1
	.word	-1
	.word	-1
	.zero	4
	.word	1549543997
	.word	333261125
	.word	-524750786
	.word	-59742
	.word	-1
	.word	-1
	.word	-1
	.zero	4
	.word	291249441
	.word	875725014
	.word	1455558946
	.word	1241760211
	.word	840143033
	.word	1807007615
	.word	-1223816003
	.word	-2063565260
	.word	1154843033
	.word	1510426468
	.word	-851216992
	.word	1277353958
	.word	-1242094597
	.word	-1120443512
	.zero	8
	.word	592838580
	.word	655046979
	.word	-675292998
	.word	1346678967
	.word	-180276650
	.word	201634731
	.word	-1274738043
	.zero	4
	.zero	4
	.dword	double_jacobian_default
	.dword	mod_sqrt_secp224r1
	.dword	x_side_default
	.dword	vli_mmod_fast_secp224r1
	.type	curve_secp256r1, @object
	.size	curve_secp256r1, 200
curve_secp256r1:
	.byte	8
	.byte	32
	.half	256
	.word	-1
	.word	-1
	.word	-1
	.word	0
	.word	0
	.word	0
	.word	1
	.word	-1
	.word	-60611247
	.word	-205927742
	.word	-1491624316
	.word	-1125713235
	.word	-1
	.word	-1
	.word	0
	.word	-1
	.word	-661077354
	.word	-190760635
	.word	770388896
	.word	1996717441
	.word	1671708914
	.word	-121837851
	.word	-517193145
	.word	1796723186
	.word	935285237
	.word	-877248408
	.word	1798397646
	.word	734933847
	.word	2081398294
	.word	-1897403574
	.word	-31817829
	.word	1340293858
	.word	668098635
	.word	1003371582
	.word	-866930442
	.word	1696401072
	.word	1989707452
	.word	-1276396203
	.word	-1439001625
	.word	1522939352
	.zero	4
	.dword	double_jacobian_default
	.dword	mod_sqrt_default
	.dword	x_side_default
	.dword	vli_mmod_fast_secp256r1
	.type	curve_secp256k1, @object
	.size	curve_secp256k1, 200
curve_secp256k1:
	.byte	8
	.byte	32
	.half	256
	.word	-977
	.word	-2
	.word	-1
	.word	-1
	.word	-1
	.word	-1
	.word	-1
	.word	-1
	.word	-801750719
	.word	-1076732276
	.word	-1354194885
	.word	-1162945306
	.word	-2
	.word	-1
	.word	-1
	.word	-1
	.word	385357720
	.word	1509065051
	.word	768485593
	.word	43777243
	.word	-830010617
	.word	1436574357
	.word	-102974548
	.word	2042521214
	.word	-82783048
	.word	-1673015153
	.word	-1501211623
	.word	-48778168
	.word	235997352
	.word	1571093500
	.word	648266853
	.word	1211816567
	.word	7
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.zero	4
	.dword	double_jacobian_secp256k1
	.dword	mod_sqrt_default
	.dword	x_side_secp256k1
	.dword	vli_mmod_fast_secp256k1
	.section	.sbss,"aw",@nobits
	.align	3
	.type	g_rng_function, @object
	.size	g_rng_function, 8
g_rng_function:
	.zero	8
	.ident	"GCC: (gc891d8dc23e) 13.2.0"
